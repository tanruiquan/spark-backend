{"version":3,"sources":["assets/Logo_conversations.svg","components/navigation/BackButton.js","utils/utils.js","components/navigation/HelpModal.js","components/navigation/HelpButton.js","components/navigation/NavBar.js","components/navigation/LinkButton.js","components/cards/QuestionCard.js","services/pictures.js","components/cards/PictureGallery.js","components/cards/PictureCard.js","components/cards/SoloInput.js","components/utils/Confetti.js","services/questions.js","reducers/soloReducer.js","components/cards/SoloStack.js","pages/SoloGame.js","components/cards/ProgressBar.js","components/cards/QuestionStack.js","reducers/questionsReducer.js","assets/mode_deep.svg","assets/mode_icebreakers.svg","assets/mode_thisorthat.svg","pages/GroupGame.js","components/profile/Favourites.js","components/profile/JourneyStack.js","pages/Profile.js","pages/About.js","socket.js","components/chat/ChatMessage.js","components/chat/ChatMessages.js","components/chat/ChatInput.js","components/chat/Chat.js","pages/OnlineGame.js","components/navigation/MenuHeader.js","components/navigation/MenuRouter.js","pages/JoinPage.js","pages/CreatePage.js","pages/WaitingPage.js","components/profile/JourneyEntry.js","pages/JourneyPage.js","App.js","reducers/index.js","index.js"],"names":["BackButton","action","text","history","useHistory","buttonAction","undefined","goBack","buttonText","className","onClick","icon","faChevronLeft","readFavsFromStorage","JSON","parse","localStorage","getItem","shuffle","a","j","x","i","length","Math","floor","random","timestampToMM","timestamp","Date","getMonth","timestampToString","padZero","dd","d","getDate","m","y","getFullYear","t","getHours","getMinutes","writeToFavs","e","old","push","setItem","stringify","toggleFromFavs","index","findIndex","o","id","splice","isInFavs","checkSoloReady","stamp","now","console","log","getUTCFullYear","setSoloTimestamp","writeSoloReflection","content","save","question","reflection","picture","current","hasOnbording","mode","HelpModal","title","setInvisible","handleClose","preventDefault","HelpButton","useState","visible","setVisible","useEffect","Util","handleClick","onMouseUp","onTouchEnd","NavBar","type","to","src","Logo","alt","LinkButton","subtitle","QuestionCard","data","isFavoritible","color","displayToast","isFav","setIsFav","faStar","favIcon","setFavIcon","col","setColor","setQuestion","options","this","that","questionAlt","handleFav","handleShare","navigator","share","catch","error","clipboard","writeText","then","faStar_solid","Object","keys","data-testid","size","faShareAlt","baseUrl","getPictureFromUnsplash","axios","get","res","pictureByTopic","topic","pictureByTopicCount","count","pictureByQueryCount","query","PictureGallery","pictures","isSelectable","handleSelect","select","setSelect","submitSelect","alert","toggleSelect","pic","map","urls","small","alt_description","PictureCard","isActive","setPicture","picturesService","pic_this","pic_that","style","margin","SoloInput","submitHandler","colors","setReflection","picData","setData","selectedPicture","setSelected","handleReflection","target","value","handleSubmit","renderForm","onChange","spellCheck","canPicture","Confetti","getAllQuestions","getAllQuestionsFromCategory","category","getQuestionsFromCategory","resOne","resTwo","resThree","result","args","numOfOne","numOfTwo","numOfThree","levelOne","slice","levelTwo","levelThree","getSoloQuestions","lv_small","coin","lv_big","CHECK_READY","IS_READY","IS_UNREADY","FETCH_SOLO_QUESTIONS_SUCCESS","FETCH_SOLO_QUESTIONS_FAILURE","FETCH_JOURNEY","THROW_ERROR","initialState","soloReady","loading","hasErrors","journey","questions","checkSoloStatus","fetchSoloQuestionsSuccess","payload","throwError","dispatch","isReady","fetchJourneyFromLocalStorage","connect","state","solo","setStage","setIndex","questionsService","Number","toString","hasError","setMode","stage","startGame","message","toastful","position","duration","marginBottom","ProgressBar","completed","fillerStyles","height","width","textAlign","transition","labelStyles","padding","fontWeight","QuestionStack","qnList","setQnList","handleSwipe","end","clearStyle","background","border","overflow","maxWidth","q","idx","onSwipe","GET_QUESTION","GET_QUESTION_SUCCESS","GET_QUESTION_FAILURE","getQuestion","getQuestionSuccess","getQuestionFailure","logo_deep","logo_icebreakers","logo_thisorthat","renderMode","Favourites","favs","setPage","Profile","setFavs","About","href","socket","io","autoConnect","ChatMessage","user","from","ReactEmoji","emojify","ChatMessages","messages","ChatInput","setText","sendMessage","prompt","onSubmit","autoFocus","placeholder","event","onKeyPress","key","faArrowCircleRight","Chat","setQuestions","setUser","setMessages","roomCode","useParams","window","onbeforeunload","emit","sessionStorage","removeItem","isHost","questionService","on","userID","auth","concat","off","confirm","OnlineGame","MenuHeader","MenuRouter","menu","setMenu","JoinPage","inputCode","setInputCode","BASE_URL","CreatePage","code","setCode","once","WaitingPage","JourneyEntry","App","navigate","path","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ac3e2a8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo_conversations.9105b769.svg\";","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\n\n\nconst BackButton = ({action, text}) => {\n\n  const history = useHistory();\n\n  const goBack = () => {\n    history.goBack();\n  };\n\n  const buttonAction = action === undefined ? goBack : action;\n  const buttonText = text === undefined ? 'back' : text;\n\n  return (\n    <div className=\"menu__linkbutton--back\" onClick={buttonAction} >\n      <FontAwesomeIcon icon={faChevronLeft} /> {buttonText}\n    </div>\n  );\n};\n    \nexport default BackButton;\n","// shuffle array in-place using Fisher-Yates\n// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array\n\nconst shuffle = (a) => {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n\nconst timestampToMM = (timestamp) => {\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May',\n    'Jun', 'Jul', 'Aug','Sep','Oct','Nov','Dec']\n  return months[new Date(timestamp).getMonth()-1];\n}\n\nconst timestampToString = (timestamp) => {\n\n  function padZero(i) {\n    if (i < 10) { \n      i = '0' + i;\n    }\n    return i;\n  }\n\n  const dd = new Date(timestamp);\n  const d = dd.getDate();\n  const months = ['January', 'February', 'March', 'April', 'May',\n    'June', 'July', 'August','September','October','November','December']\n  const m = months[dd.getMonth()-1];\n  const y = dd.getFullYear();\n  const t = `${padZero(dd.getHours())}:${padZero(dd.getMinutes())}`;\n\n  return (`${d} ${m} ${y}, ${t}`);\n}\n\nconst writeToFavs = (e) => {\n  var old = readFavsFromStorage();\n  old.push(e);\n  localStorage.setItem('favs', JSON.stringify(old));\n}\n\nconst toggleFromFavs = (e) => {\n  var old = readFavsFromStorage();\n  var index = old.findIndex(o => o.id === e.id);\n  if (index === -1) {\n    old.push(e);\n  } else {\n    old.splice(index, 1);\n  }\n  localStorage.setItem('favs', JSON.stringify(old));\n}\n\nconst isInFavs = (e) => {\n  var old = readFavsFromStorage();\n  return (old.findIndex(o => o.id === e.id) != -1);\n}\n\n// assumes that favs exist in localstorage\n// returns array containing favs\nconst readFavsFromStorage = () => {\n  return JSON.parse(localStorage.getItem('favs')) || [];\n}\n\nconst checkSoloReady = () => {\n  // read last posted date in solo timestamp\n  // if timestamp doesn't exist, guaranteed to be ready.\n  // is current day is a different date?\n  // if so, return true\n  // otherwise, return false\n  if (!JSON.parse(localStorage.getItem('solo'))) {\n    return true;\n  } else {\n    const stamp = new Date(JSON.parse(localStorage.getItem('solo')));\n    const now = new Date(Date.now());\n    console.log('stamp', stamp)\n    console.log('now', now);\n    if (stamp.getDate() !== now.getDate() ||\n        stamp.getMonth() !== now.getMonth() ||\n        stamp.getUTCFullYear() !== now.getUTCFullYear()) {\n      return true;\n    }\n    return false;\n  }\n}\n\nconst setSoloTimestamp = () => {\n  let now = Date.now();\n  localStorage.setItem('solo', JSON.stringify(now));\n}\n\nconst writeSoloReflection = (content) => {\n  let now = Date.now();\n  let save = {\n    question: content.question,\n    reflection: content.reflection,\n    picture: content.picture || false,\n    timestamp: now\n  }\n  let current = JSON.parse(localStorage.getItem('reflection')) || [];\n  localStorage.setItem('reflection', JSON.stringify([...current, save]));\n}\n\nconst hasOnbording = (mode) => {\n  console.log('hasOnboarding', JSON.parse(localStorage.getItem(`onboarding-${mode}`)));\n  if(!JSON.parse(localStorage.getItem(`onboarding-${mode}`))){\n    localStorage.setItem(`onboarding-${mode}`, 'true');\n    return true;\n  }\n  return false;\n}\n\n\nexport default {\n  shuffle, timestampToMM, timestampToString,\n  writeToFavs, toggleFromFavs, isInFavs, readFavsFromStorage,\n  checkSoloReady, setSoloTimestamp, writeSoloReflection,\n  hasOnbording\n}","import React from 'react';\nimport BackButton from './BackButton';\n\nconst HelpModal = ({mode, setInvisible}) => {\n\n\n  const handleClose = (e) => {\n    e.preventDefault();\n    setInvisible();\n  }\n\n  console.log('mode is ', mode);\n  let content;\n  let title;\n\n  switch(mode) {\n  case 'favourites':\n    title = 'Favourites';\n    content = 'Your Favourited cards are all here! Swipe the cards to reveal more Questions!';\n    break;\n  case 'solo':\n    title = 'Solo'\n    content = 'Solo mode is perfect for reflection and self-discovery! \\n\\n' +\n    'Every day, you\\'ll receive 3 thought provoking questions. Write down answers that will be saved in your personal Journey, and look back on them in the future!';\n    break;\n  case 'icebreakers':\n    title = 'Icebreakers'\n    content = 'Welcome to Icebreakers mode! Swipe the cards to reveal more Questions! \\n\\n' +\n    'Spark any conversation with our wide variety of Icebreakers! You\\'re sure to get to know somebody with these questions.'\n    break;\n  case 'deep':\n    title = 'Deep Dive'\n    content = 'Welcome to Deep Dive mode! Swipe the cards to reveal more Questions! \\n\\n' +\n    'Deep Dive contains questions that challenge assumptions and go deep into what’s normally left unsaid. Find out what you and your friends are truly like, and bond together in the process!'\n    break;\n  case 'story':\n    title = 'Story'\n    content = 'Welcome to Story mode! Swipe the cards to reveal more Questions! \\n\\n' +\n    'Story mode is about getting to know someone on a different level. Answer 10 questions in total, which get progressively more personal, and learn about one another in the process. \\n\\n' +\n    'Take turns asking and answering each question as you progress through this mode!'\n    break;\n  case 'this-or-that':\n    title = 'This or That'\n    content = 'Welcome to This or That mode! Swipe the cards to reveal more Questions! \\n\\n' +\n      'This or That is a lighthearted game, where you find out about each others\\' preferences. Which will you pick?'\n    break;\n  }\n\n  return (\n    <>\n      <div className=\"modal\" onClick={handleClose}>\n      </div>\n      <div className=\"modal__content\">\n        <h1>{title}</h1>\n        <span>{content}</span>\n        <div className=\"modal__close\">\n          <BackButton action={handleClose} text='close'/>\n        </div>\n      </div>\n    </>\n    \n  )\n\n}\n\nexport default HelpModal;","import React, {useEffect, useState} from 'react';\nimport Util from '../../utils/utils'\nimport HelpModal from './HelpModal';\n\nconst HelpButton = ({mode}) => {\n\n  const [visible,setVisible] = useState(false);\n\n  useEffect(() => {\n    console.log('helpmodal useEffect');\n    if (Util.hasOnbording(mode)) {\n      setVisible(true);\n    }\n  }, [])\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    setVisible(true)\n  }\n\n  const setInvisible = () => {\n    setVisible(false);\n  }\n\n  return (\n    <>\n      {visible \n        ? <HelpModal mode={mode} setInvisible={setInvisible}/>\n        : null\n      }\n\n      <div className=\"navbar__button-container\">\n        <div className=\"menu__linkbutton--back\"\n          onMouseUp={handleClick}\n          onTouchEnd={handleClick}> help </div> \n      </div>\n    </>\n  )\n\n}\n\nexport default HelpButton;","import React from 'react';\nimport Logo from '../../assets/Logo_conversations.svg';\nimport { Link } from 'react-router-dom';\nimport BackButton from './BackButton';\nimport HelpButton from './HelpButton';\n\nconst NavBar = ({mode}) => {\n\n  let type = mode === 'profile' ? 'profile' : 'game';\n  console.log('navbar mode', mode);\n\n  return (\n    <>\n      <div className={`navbar ${type}__navbar`}>\n        <div className=\"navbar__button-container\"> <BackButton /> </div>\n        <Link to=\"/\"> \n          <img src={Logo} className=\"site__sparklogo navbar__logo\" alt=\"SPARK logo\"/>\n        </Link>\n        {mode != 'profile' ? <HelpButton mode={mode}/> : null}\n      </div>\n    </>\n  );\n};\n\nexport default NavBar;","import React from 'react';\n\nconst LinkButton = ({title, subtitle, action}) => {\n\n  const buttonAction = action === undefined ? action : action;\n\n  return (\n    <div className=\"menu__linkbutton selectable\" onClick={buttonAction}>\n      <span className=\"menu__linkbutton--title\"> {title} </span> <br/>\n      <span className=\"menu__linkbutton--subtitle\"> {subtitle} </span>\n    </div>\n  );\n};\n\nexport default LinkButton;","import React, {useState, useEffect} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-regular-svg-icons';\nimport { faStar as faStar_solid } from '@fortawesome/free-solid-svg-icons';\nimport { faShareAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport Util from '../../utils/utils'\n\nconst QuestionCard = ({data, isFavoritible=true, color, displayToast, mode}) => {\n\n  const [isFav, setIsFav] = useState(false);\n  const [favIcon, setFavIcon] = useState(faStar);\n  const [col, setColor] = useState(null);\n  const [question, setQuestion] = useState('Loading question...');\n\n  useEffect(() => {\n    if (col == null) {\n      setColor(color);  \n    }\n\n    if (mode === 'this-or-that') {\n      let options = [data.this, data.that];\n      Util.shuffle(options);\n      setQuestion(`${options[0]} or ${options[1]}?`);\n    } else if (mode==='story') {\n      if (data.questionAlt){\n        setQuestion(data.questionAlt);\n      } else {\n        setQuestion(data.question);\n      }\n    } else {\n      setQuestion(data.question);\n    }\n  }, [])\n  \n  const handleFav = (e) => {\n    e.preventDefault();\n    Util.toggleFromFavs(data);\n    if (isFav) {\n      displayToast('Removed from favourites');\n    } else {\n      displayToast('Added to favourites')\n    }\n    setIsFav(!isFav);\n  }\n\n  const handleShare = () => {\n    if (navigator.share) {\n      navigator.share({\n        title: 'SPARK Meaningful Conversations',\n        text: question,\n      }).catch((error) => console.log('Error sharing', error))\n    } else {\n      navigator.clipboard.writeText(question).then(() => {\n        displayToast('Copied question to clipboard! Share it with your friends!')\n      })\n    }\n  }\n\n  useEffect(() => {\n    setIsFav(Util.isInFavs(data));\n  },[])\n\n  useEffect(() => {\n    if (isFav) { setFavIcon(faStar_solid) }\n    else { setFavIcon(faStar) }\n  }, [isFav])\n\n  const renderQuestion = () => {\n    if (Object.keys(data).length === 0) {\n      // if initial data for question is not loaded yet\n      // (Default is an empty Object)\n      return null;\n    } else {\n      return (\n        <div data-testid=\"question-card\" className={`question-card --${col}`}>\n          <p className=\"question-card__title disable--select\"> {question} </p>\n\n          {isFavoritible \n            ? <div className=\"question-card__icons-container disable--select\"> \n              <FontAwesomeIcon icon={favIcon} className=\"question-card__icon\" size='3x'\n                onClick={handleFav} \n                onTouchEnd={handleFav}\n                title={isFav ? 'Remove from favourites' : 'Add to favourites'} />\n              <FontAwesomeIcon icon={faShareAlt} className=\"question-card__icon\" size='3x'\n                onClick={handleShare} \n                onTouchEnd={handleShare}\n                title=\"Share\" />\n            </div> \n            : <p> </p>\n          }\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"question-card__content-container\">\n      {renderQuestion()}\n    </div>\n  );\n};\n\nexport default QuestionCard;","import axios from 'axios'\nconst baseUrl = '/api/pictures'\n\nconst getPictureFromUnsplash = async () => {\n  const res = await axios.get(`${baseUrl}/random`)\n\n  return res.data;\n};\n\nconst pictureByTopic = async (topic) => {\n  const res = await axios.get(`${baseUrl}/topic/${topic}`)\n\n  return res.data;\n}\n\nconst pictureByTopicCount = async (topic, count) => {\n  const res = await axios.get(`${baseUrl}/topic/${topic}/${count}`)\n\n  return res.data;\n}\n\nconst pictureByQueryCount = async (query, count) => {\n  const res = await axios.get(`${baseUrl}/query/${query}/${count}`)\n\n  return res.data;\n}\n\nexport default { \n  getPictureFromUnsplash,\n  pictureByTopic, pictureByTopicCount,\n  pictureByQueryCount \n}","import React, { useState } from 'react';\n\nconst PictureGallery = ({pictures=[], isSelectable=false, handleSelect}) => {\n\n  const [select, setSelect] = useState(null);\n\n  const submitSelect = () => {\n    if(select == null) {\n      alert('You did not select!');\n    } else {\n      handleSelect(select)\n    }\n  }\n\n  const toggleSelect = (e, pic) => {\n    e.preventDefault();\n    if ( select === null || select.id != pic.id) {\n      setSelect(pic)\n    } else {\n      setSelect(null)\n    }\n  }\n\n  const renderGallery = () => {\n    if (pictures.length === 0) {\n      // if initial data for picture is not loaded yet\n      // (Default is an empty Object)\n      return null;\n    } else {\n      return (\n        <>\n          <div className=\"picture-card__gallery\">\n            {pictures.map(pic => \n              <div key={pic.id} \n                className={`picture-card__container ${isSelectable ? 'selectable' : ''} \n                ${(select) ? select.id==pic.id ? 'selected' : '' : ''}`}\n                onTouchEnd={(e) => toggleSelect(e, pic)}\n                onMouseUp={(e) => toggleSelect(e, pic)}\n                data-testid=\"gallery-picture\">\n                <img src={pic.urls.small} alt={pic.alt_description}\n                  className={`picture-card__thumb ${(pictures.length === 1) ? 'picture-card__solo' : ''}`}/>\n              </div>\n            )}\n\n          </div>\n        \n          <div>\n            {isSelectable ? <button onClick={submitSelect} className=\"input--button h5-size bold --amethyst selectable\"> Select </button> : null}\n          </div>\n        </>\n      );\n    }\n  };\n\n  return (\n    renderGallery()\n  );\n};\n\nexport default PictureGallery;","import React, {useEffect, useState} from 'react';\n\nimport picturesService from '../../services/pictures'\n\nimport Util from '../../utils/utils'\nimport PictureGallery from './PictureGallery';\n\nconst PictureCard = ({topic, data, isActive, mode, isSelectable=false, handleSelect}) => {\n\n  const [pic, setPicture] = useState([]);\n  const [question, setQuestion] = useState('Loading question...');\n\n  useEffect(async () => {\n    if (data.this) {\n      // this-or-that mode\n      let options = [data.this, data.that];\n      Util.shuffle(options);\n      if(mode === 'this-or-that'){\n        setQuestion(`${options[0]} or ${options[1]}?`);\n      }\n      let pic_this = await picturesService.pictureByQueryCount(data.this,1);\n      let pic_that = await picturesService.pictureByQueryCount(data.that,1);\n      setPicture([...pic_this, ...pic_that]);\n    } else if (data.pic) {\n      // contains picture already\n      setPicture([data.pic]); \n    } else if (mode === 'online') {\n      // fetch a picture otherwise\n      let res = await picturesService.pictureByTopicCount(topic,2);\n      setPicture([...res]);\n    } else {\n      // fetch a picture otherwise\n      let res = await picturesService.pictureByTopicCount(topic,5);\n      setPicture([...res]);\n    }\n    setQuestion(data.question);\n  }, [])\n\n  const renderPicture = () => {\n    if (Object.keys(pic).length === 0) {\n      // if initial data for picture is not loaded yet\n      // (Default is an empty Object)\n      return null;\n    } else {\n      return (\n        <PictureGallery pictures={pic} isSelectable={isSelectable} handleSelect={handleSelect}/>\n      );\n    }\n  };\n\n  return (\n    <div data-testid=\"picture-card\" className={`picture-card ${isActive ? 'active' : 'inactive'} ${isSelectable ? '' : 'disable--select'}`}>\n      <div style={{margin:'20px'}}>\n        <p className=\"picture-card__question\"> {question} </p>\n      </div>\n\n      {renderPicture()}\n    </div>\n  );\n};\n\nexport default PictureCard;","import React, {useState} from 'react';\nimport QuestionCard from './QuestionCard';\nimport PictureCard from './PictureCard';\n\nconst SoloInput = ({data, displayToast, submitHandler}) => {\n  let colors = ['jade', 'topaz', 'amethyst', 'amber'];\n  let col = colors[Math.floor(Math.random() * colors.length)];\n\n  const [reflection, setReflection] = useState('');\n  const [picData, setData] = useState(null);\n  const [selectedPicture, setSelected] = useState(null);\n\n  const handleReflection = (e) => {\n    setReflection(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (reflection == '') {\n      displayToast('Please write out a reflection!');\n    } else {\n      submitHandler({\n        reflection: reflection,\n        picture: picData || null\n      });\n      setReflection('');\n      displayToast('Response submitted!');\n    }\n  }\n\n  const selectPicture = (pic) => {\n    setSelected(pic)\n\n    //update question\n    data = {...data, pic: {...pic}};\n    setData(data)\n  }\n\n  const renderForm = () => {\n    return (\n      <div className=\"solo__input--form\">\n\n        {selectedPicture\n          ?\n          <div className=\"solo__input--pic\"> \n            <PictureCard key='p' data={picData} mode='solo' isActive={true} />\n          </div>\n          : null\n        }\n\n        <h1 className=\"solo__input--title\">Reflection</h1>\n        <textarea value={reflection} onChange={handleReflection}\n          spellCheck=\"false\"\n          className=\"textarea\"/>\n        <button onClick={handleSubmit} onTouchEnd={handleSubmit}\n          className={'input--button h5-size bold selectable end --spark'}> Save </button>\n      </div>\n    )\n\n  }\n\n  return (\n    <div className=\"solo__input\">\n      {data.canPicture \n        ? <>\n          {!selectedPicture \n            ? <PictureCard topic={data.topic} data={data} isActive={true} mode='solo'\n              isSelectable={true} handleSelect={selectPicture}/>\n            : renderForm()\n          }\n        </>\n        : <>\n          <QuestionCard data={data} isFavoritible={true} displayToast={displayToast}\n            color={col} mode='solo'/>\n          {renderForm()}\n        </>\n      }\n    </div>\n  );\n};\n\nexport default SoloInput","import React, {useEffect} from 'react';\nimport '../utils/confetti.css'\n\nconst Confetti = ({text}) => {\n\n  useEffect(() => {\n  }, [])\n\n  return (\n    <div className='bg-confetti-animated'>\n      <p> {text} </p>\n    </div>\n  )\n}\n\nexport default Confetti","import axios from 'axios'\nimport Util from '../utils/utils'\n\nconst baseUrl = '/api/questions'\n\nconst getAllQuestions = async () => {\n  const res = await axios.get(baseUrl);\n\n  // right now it's received in an array\n  return Util.shuffle(res.data);\n};\n\nconst getAllQuestionsFromCategory = async (category) => {\n  const res = await axios.get(baseUrl + '/' + category);\n\n  return Util.shuffle(res.data);\n};\n\nconst getQuestionsFromCategory = async (category, ...args) => {\n  const resOne = await axios.get(`${baseUrl}/${category}/1`)\n  const resTwo = await axios.get(`${baseUrl}/${category}/2`)\n  const resThree = await axios.get(`${baseUrl}/${category}/3`)\n\n  let result = []\n  const [numOfOne, numOfTwo, numOfThree] = [...args]\n  if (numOfOne) {\n    const levelOne = Util.shuffle(resOne.data).slice(0, numOfOne)\n    result = [...result, ...levelOne]\n  }\n  if (numOfTwo) {\n    const levelTwo = Util.shuffle(resTwo.data).slice(0, numOfTwo)\n    result = [...result, ...levelTwo]\n  }\n  if (numOfThree) {\n    const levelThree = Util.shuffle(resThree.data).slice(0, numOfThree)\n    result = [...result, ...levelThree]\n  }\n  return result\n}\n\nconst getSoloQuestions = async () => {\n  let lv_small = await axios.get(baseUrl + '/solo/1')\n  const coin = [2,2,2,2,3][Math.floor(Math.random()*5)] // rng for 80% lv2, 20% lv3\n  let lv_big = await axios.get(baseUrl + '/solo/' + coin);\n\n  // pick two from small\n  lv_small = Util.shuffle(lv_small.data).slice(0,2);\n\n  // pick one from big\n  lv_big = lv_big.data[Math.floor(Math.random() * lv_big.data.length)];\n  \n  return [...lv_small, lv_big];\n}\n\nexport default { getAllQuestions, getAllQuestionsFromCategory, getQuestionsFromCategory, getSoloQuestions }\n","import Util from '../utils/utils';\nimport questionsService from '../services/questions';\n\n// Actions\nconst CHECK_READY = 'CHECK_SOLO_READY';\nconst IS_READY = 'IS_READY';\nconst IS_UNREADY = 'IS_UNREADY';\nconst FETCH_SOLO_QUESTIONS_SUCCESS = 'FETCH_SOLO_QUESTIONS_SUCCESS';\nconst FETCH_SOLO_QUESTIONS_FAILURE = 'FETCH_SOLO_QUESTIONS_FAILURE';\nconst FETCH_JOURNEY = 'FETCH_JOURNEY';\nconst THROW_ERROR = 'THROW_ERROR';\n\n// Reducer\nexport const initialState = {\n  soloReady: true,\n  loading: false,\n  hasErrors: false,\n  journey: [],\n  questions: []\n};\n\nexport default function soloReducer(state = initialState, action) {\n  switch (action.type) {\n\n  case CHECK_READY:\n    return { ...state, loading: true };\n  case IS_READY:\n    return { ...state, soloReady: true, loading: false };\n  case IS_UNREADY:\n    return { ...state, soloReady: false, loading: false };\n  case FETCH_SOLO_QUESTIONS_SUCCESS:\n    return { ...state, loading: false, questions: action.payload };\n  case FETCH_SOLO_QUESTIONS_FAILURE:\n    return { ...state, loading: false, hasErrors: true };\n  case FETCH_JOURNEY:\n    return { ...state, journey: action.payload};\n  case THROW_ERROR:\n    return { ...state, hasErrors: true};\n  default:\n    return state;\n\n  }\n}\n\n// Action Creators\nexport const checkSoloStatus = () => ({\n  type: CHECK_READY\n})\n\nexport const SoloStatusReady = () => ({\n  type: IS_READY\n})\n\nexport const SoloStatusUnready = () => ({\n  type: IS_UNREADY\n})\n\nexport const fetchSoloQuestionsSuccess = (questions) => ({\n  type: FETCH_SOLO_QUESTIONS_SUCCESS,\n  payload: questions\n})\n\nexport const fetchSoloQuestionsFailure = () => ({\n  type: FETCH_SOLO_QUESTIONS_FAILURE\n})\n\nexport const fetchJourney = (journey) => ({\n  type: FETCH_JOURNEY,\n  payload: journey\n})\n\nexport const throwError = () =>  ({\n  type: THROW_ERROR\n})\n\n// Thunks\nexport function checkSoloReady() {\n  return async (dispatch) => {\n    dispatch(checkSoloStatus());\n    try {\n      const isReady = Util.checkSoloReady()\n      if (isReady) {\n        dispatch(SoloStatusReady());\n      } else {\n        dispatch(SoloStatusUnready());\n      }\n    } catch (error) {\n      dispatch(throwError());\n    }\n  }\n}\n\nexport function fetchSoloQuestions() {\n  return async (dispatch) => {\n    dispatch(checkSoloStatus());\n    try {\n      let res;\n      if (!localStorage.getItem('solo_questions')) {\n        res = await questionsService.getSoloQuestions();\n        localStorage.setItem('solo_questions', JSON.stringify(res));\n      } else {\n        res = JSON.parse(localStorage.getItem('solo_questions'));\n      }\n      dispatch(fetchSoloQuestionsSuccess(res));\n    } catch (error) {\n      dispatch(fetchSoloQuestionsFailure());\n    }\n  }\n}\n\nexport function writeNewSoloQuestions() {\n  return async (dispatch) => {\n    try {\n      let res = await questionsService.getSoloQuestions();\n      localStorage.setItem('solo_questions', JSON.stringify(res));\n      dispatch(fetchSoloQuestionsSuccess(res));\n    } catch (error) {\n      dispatch(throwError());\n    }\n  }\n}\n\nexport function fetchJourneyFromLocalStorage() {\n  return (dispatch) => {\n    dispatch(checkSoloStatus());\n    try {\n      let res = JSON.parse(localStorage.getItem('reflection')) || [];\n      dispatch(fetchJourney(res));\n    } catch (error) {\n      dispatch(throwError())\n    }\n  }\n}","import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport SoloInput from './SoloInput';\nimport Confetti from '../utils/Confetti';\n\nimport { fetchSoloQuestions, writeNewSoloQuestions } from '../../reducers/soloReducer';\nimport Util from '../../utils/utils';\n\nconst SoloStack = ({dispatch, loading, questions, hasErrors, displayToast, setStage}) => {\n\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    dispatch(fetchSoloQuestions());\n    setIndex(Number(localStorage.getItem('solo_index')));\n  }, [dispatch]);\n\n  const submitHandler = (content) => {\n    // write to reflections\n    Util.writeSoloReflection({\n      question: questions[index].question,\n      reflection: content.reflection,\n      picture: content.picture || null\n    });\n\n    // increment index unless max\n    setIndex(index+1);\n    localStorage.setItem('solo_index', (index+1).toString());\n\n    // write new timestamp, reset index, fetch tomorrow's questions\n    if((index+1)==questions.length){\n      Util.setSoloTimestamp();\n      localStorage.setItem('solo_index', (0).toString());\n      dispatch(writeNewSoloQuestions());\n    }\n  }\n\n  const renderEnd = () => {\n    setStage('game-end')\n    return <Confetti text={'That\\'s all the questions for today! Your responses are saved in your Journey.'} />\n  }\n\n  const renderStack = () => {\n    if (loading) {\n      return <p> loading </p> \n    } else if (hasErrors) {\n      return <p> error :( </p>\n    } else if (questions) {\n      if (index==questions.length) { return renderEnd() }\n      else{\n        return (\n          <>\n            <SoloInput key={index} data={questions[index]}\n              displayToast={displayToast}\n              submitHandler={submitHandler}/>\n          </>\n        )\n      }\n      \n    } else {\n      return <p> fatal error </p>\n    }\n  }\n\n  return (\n    renderStack()\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.solo.loading,\n  questions: state.solo.questions,\n  hasErrors: state.solo.hasErrors,\n});\n\nexport default connect(mapStateToProps)(SoloStack);","import React, { useEffect, useState } from 'react';\nimport {\n  Link\n} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport NavBar from '../components/navigation/NavBar';\nimport LinkButton from '../components/navigation/LinkButton';\nimport SoloStack from '../components/cards/SoloStack';\nimport Confetti from '../components/utils/Confetti';\nimport { Toastful, toastful } from 'react-toastful';\nimport { checkSoloReady } from '../reducers/soloReducer';\n\n\nconst SoloGame = ({dispatch, soloReady, loading, hasError, setMode}) => {\n\n  const [stage, setStage] = useState('menu')\n\n  useEffect(() => {\n    dispatch(checkSoloReady());\n  },[dispatch])\n\n  const startGame = () => {\n    setStage('game');\n  }\n\n  const displayToast = (message) => {\n    toastful(message, {position: 'top', duration: 1500});\n  }\n\n  const renderStart = () => {\n    if (hasError) {\n      <p> Sorry, something went wrong :( </p>\n    }\n    if (loading) {\n      <p> loading... </p>\n    }\n    if (soloReady) {\n      return (\n        <>\n          <LinkButton title=\"Start\" action={startGame}/>\n        </>\n      )\n    } else {\n      return <Confetti text ={'You have completed all 3 questions today! Come back tomorrow.'} />\n    }\n  }\n\n  const renderSolo = () => {\n    if (stage === 'menu') {\n      return (\n        <div className=\"solo__welcome\" style={{marginBottom:'20vh'}}>\n          <p className=\"picture-card__question\"> Welcome to Solo mode! </p>\n          <p> Every day, you&apos;ll receive 3 thought provoking questions. \n          Write down answers that will be saved to your personal <Link className=\"text__link\" to=\"/profile\" onClick={setMode('profile')}> Journey </Link> </p>\n          <p> <strong>NOTE:</strong> We do not store any of your data on servers.\n        It is all stored in your local browser storage. </p>\n          {renderStart()}\n        </div>\n      )\n    } else if (stage === 'game' || stage==='game-end') {\n      return (\n        <SoloStack displayToast={displayToast} setStage={setStage}/>\n      )\n    }\n  };\n\n  return (\n    <div className=\"solo\">\n      {renderSolo()}\n      <Toastful />\n      <NavBar mode={stage==='game' ? 'solo' : 'profile'}/>\n    </div>\n  );\n\n};\n\nconst mapStateToProps = (state) => ({\n  soloReady: state.solo.soloReady,\n  loading: state.solo.loading,\n  hasError: state.solo.hasError\n});\n\nexport default connect(mapStateToProps)(SoloGame);","import React from 'react';\n\nconst ProgressBar = ({ completed }) => {\n\n  const fillerStyles = {\n    height: '100%',\n    width: `${completed}%`,\n    textAlign: 'right',\n    transition: 'width 0.5s ease-in-out'\n  }\n\n  const labelStyles = {\n    padding: 5,\n    color: `${completed === 0 ? 'white' : 'black'}`,\n    fontWeight: 'bold'\n  }\n\n  return (\n    <div>\n      <div style={fillerStyles} className={'--spark'}>\n        <span style={labelStyles}>{`${completed}%`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;","import React, {useState, useEffect} from 'react';\nimport QuestionCard from './QuestionCard';\nimport PictureCard from './PictureCard';\nimport {Card, CardWrapper} from 'react-swipeable-cards';\nimport ProgressBar from './ProgressBar';\nimport Confetti from '../utils/Confetti';\n\nconst QuestionStack = ({questions, mode, isFavoritible, displayToast}) => {\n\n  const [qnList, setQnList] = useState([]);\n  const [index, setIndex] = useState(0);\n  let colors = ['topaz', 'amber', 'amethyst', 'jade'];\n  let color = colors[Math.floor(Math.random() * colors.length)];\n\n  useEffect(() => {\n    setQnList(questions.slice(0,5));\n    handleSwipe()\n  }, []);\n\n  const handleSwipe = () => {\n    let offset = 5;\n    setIndex(index + 1);\n    let end = index+offset >= questions.length ? questions.length : index+offset\n    setQnList(questions.slice(index, end));\n  }\n\n  const clearStyle = {\n    background: 'transparent',\n    border: 'none',\n    overflow: 'visible',\n    height: 'auto',\n    maxWidth: '800px'\n  }\n\n  return (\n    <div>\n      {mode === 'story'? <ProgressBar completed={(index-1)*10} /> : null}\n      <CardWrapper className=\"question-card__container\">\n        {qnList.map((q, idx) => \n          <Card key={q.id} onSwipe={handleSwipe} style={clearStyle}>\n            {q.canPicture \n              ? <PictureCard topic={q.topic} data={q} isActive={idx===0} mode={mode}/>\n              : <QuestionCard data={q} isFavoritible={isFavoritible} displayToast={displayToast}\n                color={color} mode={mode}/>\n            }\n          </Card>\n        )}\n      </CardWrapper>\n    </div>\n  );\n};\n\nexport default QuestionStack;","import Util from '../utils/utils';\nimport questionsService from '../services/questions';\n\n// Actions\nconst GET_QUESTION = 'GET_QUESTION';\nconst GET_QUESTION_SUCCESS = 'GET_QUESTION_SUCCESS';\nconst GET_QUESTION_FAILURE = 'GET_QUESTION_FAILURE';\n\n// Reducer\nexport const initialState = {\n  questions: [],\n  loading: false,\n  hasErrors: false,\n};\n\nexport default function questionsReducer(state = initialState, action) {\n  switch (action.type) {\n\n  case GET_QUESTION:\n    return { ...state, loading: true };\n  case GET_QUESTION_SUCCESS:\n    return {questions: action.payload, loading: false, hasErrors: false };\n  case GET_QUESTION_FAILURE:\n    return {...state, loading: false, hasErrors: true };\n  default:\n    return state;\n\n  }\n}\n\n// Action Creators\nexport const getQuestion = () => ({\n  type: GET_QUESTION,\n});\n\nexport const getQuestionSuccess = (questions) => ({\n  type: GET_QUESTION_SUCCESS,\n  payload: questions,\n});\n\nexport const getQuestionFailure = () => ({\n  type: GET_QUESTION_FAILURE,\n});\n\n// Thunks\nexport function fetchQuestion() {\n  return async (dispatch) => {\n    dispatch(getQuestion());\n\n    try {\n      const res = await questionsService.getAllQuestions();\n\n      const data = res;\n      // const data = res[Math.floor(Math.random() * res.length)];\n\n      dispatch(getQuestionSuccess(data));\n    } catch (error) {\n      dispatch(getQuestionFailure());\n    }\n  };\n}\n\nexport function fetchQuestionsFromCategory(category) {\n  return async (dispatch) => {\n    dispatch(getQuestion());\n\n    try {\n      let res;\n      if (category === 'favourites') {\n        res = await Util.readFavsFromStorage();\n      } else if (category === 'story') {\n        res = await questionsService.getQuestionsFromCategory('story', 7, 2, 1)\n      }else {\n        res = await questionsService.getAllQuestionsFromCategory(category);\n      }\n      \n      const data = res;\n\n      dispatch(getQuestionSuccess(data));\n    } catch (error) {\n      dispatch(getQuestionFailure());\n    }\n  }\n}\n","export default __webpack_public_path__ + \"static/media/mode_deep.04293f89.svg\";","export default __webpack_public_path__ + \"static/media/mode_icebreakers.a35ce8ea.svg\";","export default __webpack_public_path__ + \"static/media/mode_thisorthat.e728f6b4.svg\";","import React, { useEffect } from 'react';\nimport {connect} from 'react-redux';\n\nimport QuestionStack from '../components/cards/QuestionStack';\nimport NavBar from '../components/navigation/NavBar';\n\nimport {fetchQuestionsFromCategory} from '../reducers/questionsReducer';\n\nimport logo_deep from '../assets/mode_deep.svg';\nimport logo_icebreakers from '../assets/mode_icebreakers.svg';\nimport logo_thisorthat from '../assets/mode_thisorthat.svg';\n\nimport { toastful, Toastful } from 'react-toastful';\n\n\nconst GroupGame = ({dispatch, loading, questions, hasErrors, mode}) => {\n\n  useEffect(() => {\n    dispatch(fetchQuestionsFromCategory(mode));\n  }, [dispatch]);\n\n  const renderQuestion = () => {\n    if (loading) return <div className=\"flex-center\"> <p> Loading game... </p> </div>;\n    if (hasErrors) return <div className=\"flex-center\"> <p> An error occured. Please try again. </p> </div>;\n    \n    return <QuestionStack questions={questions} mode={mode}\n      isFavoritible={true} displayToast={displayToast}/>\n  };\n\n  const renderMode = () => {\n    switch(mode) {\n    case('deep'):\n      return <img src={logo_deep} className=\"modeicon\"/>\n    case('icebreakers'):\n      return <img src={logo_icebreakers} className=\"modeicon\" />\n    case('this-or-that'):\n      return <img src={logo_thisorthat} className=\"modeicon\" />\n    default:\n      return null;\n    }\n  }\n\n  const displayToast = (message) => {\n    toastful(message, {position: 'top', duration: 1500});\n  }\n\n  return (\n    <div>\n      {renderQuestion()}\n\n      {renderMode()}\n      <Toastful />\n      <NavBar mode={mode}/>\n    </div>\n  );\n\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.questions.loading,\n  questions: state.questions.questions,\n  hasErrors: state.questions.hasErrors,\n});\n\nexport default connect(mapStateToProps)(GroupGame);","import React from 'react';\n\nimport {Link} from 'react-router-dom';\n\nconst Favourites = ({favs, setPage, setMode}) => {\n\n  const renderFavourites = () => {\n    if (favs.length > 0) {\n      return(\n        \n        <Link to=\"/game\" onClick={() => {setPage('game'); setMode('favourites')}}>\n          <div className=\"profile__container selectable\">\n            <h1> Favourites </h1>\n          You have {favs.length} favourited cards. <span className=\"selectable-text\"> View Favourites &gt; </span>\n          </div>\n        </Link>\n      )\n    } else {\n      return (\n        <div className=\"profile__container\">\n          <h1> Favourites </h1>\n          You have no favourited cards. Click the * icon on any card to add them to favourites!\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div>\n      {renderFavourites()}\n    </div>\n  );\n};\n\nexport default Favourites;","import React, { useEffect } from 'react';\nimport {\n  Link\n} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport { checkSoloReady, fetchJourneyFromLocalStorage } from '../../reducers/soloReducer';\nimport Util from '../../utils/utils';\n\nconst JourneyStack = ({dispatch, soloReady, journey}) => {\n\n  useEffect(() => {\n    dispatch(fetchJourneyFromLocalStorage());\n    dispatch(checkSoloReady());\n  }, [dispatch]);\n\n  const renderJourneyStack = () => {\n    return (\n      <div className=\"journeystack\">\n        <h1> Journey </h1>\n        {soloReady ? <p> Your daily <Link className=\"text__link\" to=\"/solo\">Solo Questions</Link> are ready! </p> : null}\n        <div className=\"profile__container\">\n          {!journey || journey.length == 0\n            ? <p> Nothing in Journey yet! Play <Link className=\"text__link\" to=\"/solo\">Solo Mode</Link> to record your reflections. </p>\n            : journey.map((j, idx) => \n              <Link to= {`/profile/${idx}`} key={idx} className=\"journey__preview\">\n                <span className=\"journey__preview-date\">\n                  <span className=\"day\">{new Date(j.timestamp).getDate()}</span>\n                  {Util.timestampToMM(j.timestamp)}\n                </span>\n                <span className=\"journey__preview-reflection\"> \n                  <strong> {j.question} </strong> <br/>\n                  <span> {j.reflection} </span>\n                </span>\n                {j.picture ? \n                  <div>\n                    <img src={j.picture.pic.urls.small} className=\"journey__preview-pic\" />\n                  </div>\n                  : null }\n              </Link>\n            )\n          }\n        </div>\n      </div>\n    )\n  };\n\n  return (\n    <>\n      {renderJourneyStack()}\n    </>\n  );\n\n};\n\nconst mapStateToProps = (state) => ({\n  soloReady: state.solo.soloReady,\n  loading: state.solo.loading,\n  hasError: state.solo.hasError,\n  journey: state.solo.journey\n});\n\nexport default connect(mapStateToProps)(JourneyStack);","import React, {useState, useEffect} from 'react';\nimport Favourites from '../components/profile/Favourites';\nimport NavBar from '../components/navigation/NavBar';\nimport Util from '../utils/utils'\nimport JourneyStack from '../components/profile/JourneyStack';\n\nconst Profile = ({mode, setPage, setMode}) => {\n\n  const [favs, setFavs] = useState([]);\n\n  useEffect(() => {\n    if (localStorage.getItem('favs')) {\n      setFavs(Util.readFavsFromStorage());\n    }\n    setMode('profile');\n  }, []);\n\n  return (\n    <div>\n      <div className=\"profile\">\n        <h1> My Profile </h1>\n\n        <div> \n          <Favourites favs={favs} setPage={setPage} setMode={setMode}/>\n        </div>\n\n        <JourneyStack />\n\n      </div>\n\n      <NavBar mode={mode}/>\n    </div>\n  );\n\n};\n\nexport default Profile;","import React from 'react';\nimport BackButton from '../components/navigation/BackButton.js';\n\nconst About = () => {\n\n  return (\n    <div>\n      <h1> About </h1>\n      <p> <strong> SPARK </strong> is an app for creating meaningful conversations. </p>\n\n      <p> This app was created for Orbital 2021.<br/>\n          Images are from <a className=\"text__link\" href=\"https://unsplash.com\">Unsplash</a>, with icons from Font Awesome. <br/>\n          Check out our <a className=\"text__link\" href=\"https://sparkblog.netlify.app\">development blog</a> and <a className=\"text__link\" href=\"https://github.com/qreoct/spark\">Github repositories</a>.\n      </p>\n\n      <h1> Privacy </h1>\n      <p>We believe that your self-reflection is most meaningful when it is private.\n         That’s why we do not store any of your data, chat logs, and preferences on any server.</p>\n      <p>\n        Your responses in the Solo mode are only stored in your browser.\n        Note that clearing your browser data leads to loss of game data!\n      </p>\n\n      <div className=\"menu__navigation-container\">\n        <BackButton />\n      </div>\n    </div>\n  );\n\n};\n\nexport default About;","import { io } from 'socket.io-client';\n\nconst socket = io({ autoConnect: false });\n\nexport default socket;\n\n","import React from 'react'\nimport ReactEmoji from 'react-emoji'\n\nconst ChatMessage = ({user, content, from}) => {\n\n  const renderMessage = () => {\n    if (from === user) {\n      return (\n        <div className=\"msg msg--send\">\n          <div className=\"msg__bubble msg__bubble--send\">\n            <p className=\"msg__text\">{ReactEmoji.emojify(content)}</p>\n          </div>\n        </div>\n      )\n    } else if (from === 'sparkbot') {\n      return (\n        <div className=\"msg\">\n          <div>\n            <p className=\"msg__text msg--announce\">{ReactEmoji.emojify(content)}</p>\n          </div>\n        </div>\n      )\n    } else if (from != user && from != 'sparkbot') {\n      return (\n        <div className=\"msg msg--receive\">\n          <div className=\"msg__bubble msg__bubble--receive\">\n            <p className=\"msg__text\">{ReactEmoji.emojify(content)}</p>\n          </div>\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n\n  return (\n    renderMessage()\n  )\n}\n\nexport default ChatMessage","import React from 'react'\nimport ScrollToBottom from 'react-scroll-to-bottom'\nimport ChatMessage from './ChatMessage'\n\nconst ChatMessages = ({ user, messages }) => (\n  <ScrollToBottom className=\"online__messages\">\n    {messages.map((message, index) => \n      <ChatMessage content={message.content}\n        key={index}\n        user={user}\n        from={message.from}\n      />)\n    }\n  </ScrollToBottom>\n);\n\nexport default ChatMessages;","import React from 'react'\nimport { faArrowCircleRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst ChatInput = ({ text, setText, sendMessage, prompt='Type a message' }) => {\n  return (\n    <form className='input--form' onSubmit={sendMessage}>\n      <input \n        autoFocus\n        className='textarea'\n        type='text'\n        placeholder={prompt}\n        value={text}\n        onChange={event => setText(event.target.value)}\n        onKeyPress={event => event.key === 'Enter' ? sendMessage(event) : null}\n      />\n      <button type='Submit' className=\"input--button selectable\">\n        <FontAwesomeIcon icon={faArrowCircleRight} size='3x' title='Enter' />\n      </button>\n    </form>\n  )\n}\n\nexport default ChatInput\n","import React, { useState, useEffect } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\n\nimport socket from '../../socket.js'\nimport ChatMessages from './ChatMessages'\nimport ChatInput from './ChatInput'\nimport BackButton from '../navigation/BackButton'\nimport questionService from '../../services/questions'\n\nconst Chat = ({ mode, setQuestions }) => {\n  const [text, setText] = useState('')\n  const [user, setUser] = useState('')\n  const [messages, setMessages] = useState([])\n  const { roomCode } = useParams()\n  const history = useHistory()\n\n  // Ensures user leave when closing tab\n  window.onbeforeunload = () => {\n    socket.emit('leave')\n  }\n\n  useEffect(() => {\n   \n    // Redirect user when refreshing\n    const userID = sessionStorage.getItem('userID')\n    if (userID) {\n      sessionStorage.removeItem('userID')\n      history.push('/')\n    }\n    \n    socket.connect()\n    socket.emit('join', (roomCode))\n    \n    if (socket.isHost) {\n      questionService\n        .getQuestionsFromCategory(mode, 5, 4, 1)\n        .then(questions => {\n          setQuestions(questions) \n          socket.emit('setQuestions', questions)\n        })\n    } else {\n      socket.on('setQuestions', (questions) => {\n        setQuestions(questions)\n      })\n    }\n\n    socket.on('session', ({ userID }) => {\n      // attach the user ID to the next reconnection attempts\n      socket.auth = { userID }\n      sessionStorage.setItem('userID', userID);\n      socket.userID = userID\n      setUser(userID)\n    })\n\n\n    socket.on('message', (message) => { //message = {content, from, to}\n      setMessages(messages => messages.concat(message)) //I have no clue why its a function too\n    })\n\n    return () => {\n      sessionStorage.removeItem('userID')\n      socket.auth = null\n      socket.isHost = false\n      socket.emit('leave')\n      socket.off()\n      history.push('/')\n    }\n  }, [socket])\n\n  //function for sending message\n  const sendMessage = (event) => {\n    event.preventDefault()\n\n    if (text) {\n      socket.emit('private message', {content: text})\n      setText('')\n    }\n  }\n\n  const handleChatBackAction = () => {\n    const result = window.confirm('You will not be able to come back, are you sure?')\n    if (result) {\n      history.push('/')\n    }\n  }\n\n  return (\n    <>\n      <div className='online__chat-container'>\n        <ChatMessages \n          user={user} \n          messages={messages} />\n        <ChatInput \n          text={text}\n          setText={setText}\n          sendMessage={sendMessage} />\n      </div> \n      <BackButton action={handleChatBackAction} />\n    </>\n  )\n}\n\nexport default Chat","import React, { useState, useEffect } from 'react'\n\nimport Chat from '../components/chat/Chat'\nimport socket from '../socket'\nimport PictureCard from '../components/cards/PictureCard'\nimport ProgressBar from '../components/cards/ProgressBar'\n\nconst OnlineGame = ({ mode }) => {\n  const [question, setQuestion] = useState('')\n  const [questions, setQuestions] = useState([])\n  const [index, setIndex] = useState(0)\n  \n  useEffect(() => {\n    if (questions.length === 0) {\n      setQuestion('loading...')\n    } else if (index >= questions.length) {\n      setQuestion('You\\'ve reached the end of the questions!')\n    } else {\n      setQuestion(questions[index].question)\n    }\n  }, [questions, index])\n\n  useEffect(() => {\n    socket.on('next', () => {\n      setIndex(index => index + 1)\n    })\n  }, [])\n\n  const handleClick = () => {\n    socket.emit('nextQuestion')\n  }\n\n  const renderQuestion = () => {\n    return (\n      <div className=\"online__question\" key={question}>\n        {index == questions.length \n          ?\n          <>\n            <span className=\"picture-card__question\"> {question} </span>\n          </>\n          :\n          <>       \n            {questions.length > 0 && questions[index].canPicture \n              ? <PictureCard topic={questions[index].topic} data={questions[index]} isActive={true} mode={'online'}/>\n              : <span className=\"picture-card__question\"> {question} </span>}\n            <button className=\"selectable input--button h5-size bold center\" onClick={handleClick}> Next </button>\n          </>\n        }\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <ProgressBar completed={index*10} />\n      <div className=\"online__container\">\n        {renderQuestion()}\n        <Chat mode={mode} setQuestions={setQuestions} />\n      </div>\n    </>\n  )\n}\n\nexport default OnlineGame","import React from 'react';\nimport Logo from '../../assets/Logo_conversations.svg';\n\nconst MenuHeader = () => {\n\n  return (\n    <div className=\"menu__sparklogo-container\">\n      <img src={Logo} className=\"site__sparklogo\" alt=\"SPARK logo\"/>\n    </div>\n  );\n};\n\nexport default MenuHeader;","import React, { useState } from 'react';\nimport {\n  Link\n} from 'react-router-dom';\nimport BackButton from './BackButton.js';\nimport LinkButton from './LinkButton.js';\n\nconst MenuRouter = ({setPage, setMode}) => {\n\n  const [menu, setMenu] = useState('home');\n\n  switch (menu) {\n  case 'online':\n    return (\n      <>\n        <div className=\"menu__router-container\">\n          <Link to=\"/create\" onClick={() => {setPage('create'); setMode('online-room')}}><LinkButton key='Create' title=\"Create\" subtitle=\"Create your unique room\" /></Link>\n          <Link to='/join' onClick={() => {setPage('join'); setMode('online-room')}}><LinkButton key='Join' title='Join' subtitle='Join an existing room' /></Link>\n          <Link to='/random' onClick={() => {setPage('random'); setMode('online-stranger')}}><LinkButton key='Random' title='Random' subtitle='Join a random room' /></Link>\n        </div>\n        <div className=\"menu__navigation-container\">\n          <BackButton action={() => setMenu('player')}/>\n        </div>\n      </>\n    )\n  case 'mode':\n    return (\n      <>\n        <div className=\"menu__router-container\">\n          <Link to=\"/game\" onClick={() => {setPage('game'); setMode('story')}}><LinkButton key=\"Story\" title=\"Story (2 player)\" subtitle=\"10 progressive questions for 2 players!\"></LinkButton></Link>\n          <Link to=\"/game\" onClick={() => {setPage('game'); setMode('icebreakers')}}> <LinkButton key=\"Icebreakers\" title=\"Icebreakers\" subtitle=\"Get to know anyone!\"/> </Link>\n          <Link to=\"/game\" onClick={() => {setPage('game'); setMode('deep')}}> <LinkButton key=\"Deep\" title=\"Deep Questions\" subtitle=\"Go deep!\"/> </Link>\n          <Link to=\"/game\" onClick={() => {setPage('game'); setMode('this-or-that')}}> <LinkButton key=\"ThisOrThat\" title=\"This or That\" subtitle=\"Which will you choose?\"/> </Link>\n        </div>\n        <div className=\"menu__navigation-container\">\n          <BackButton action={() => setMenu('player')}/>\n        </div>\n      </>\n\n    );\n  case 'player':\n    return (\n      <>\n        <div className=\"menu__router-container\">\n          <Link to=\"/solo\" onClick={() => {setPage('solo'); setMode('solo')}}> <LinkButton key=\"Solo\" title=\"Solo\" subtitle=\"Daily self reflection\"/> </Link>\n          <Link to=\"/\" onClick={() => setMenu('mode')}> <LinkButton key=\"Group\" title=\"Group\" subtitle=\"Questions for sharing\"/> </Link>\n          <Link to=\"/\" onClick={() => setMenu('online')}> <LinkButton key=\"Online\" title=\"Online\" subtitle=\"Play with friends or strangers\"/> </Link>\n        </div>\n        <div className=\"menu__navigation-container\">\n          <BackButton action={() => setMenu('home')}/>\n        </div>\n      </>\n    );\n  default:\n    return (\n      <div className=\"menu__router-container\">\n        <Link to=\"/\" onClick={() => setMenu('player')}> <LinkButton key=\"Play\" title=\"Play\" subtitle=\"Spark meaningful conversations!\"/> </Link>\n        <Link to=\"/profile\" onClick={() => {setPage('profile'); setMode('profile')}}> <LinkButton key=\"Profile\" title=\"Profile\" subtitle=\"Your favourited cards & Journey\"/> </Link>\n        <Link to=\"/about\" onClick={() => setPage('about')}> <LinkButton key =\"About\" title=\"About\"/> </Link>\n      </div>\n    );\n  }\n};\n\nexport default MenuRouter;","import React, { useState, useEffect }  from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport socket from '../socket'\nimport MenuHeader from '../components/navigation/MenuHeader'\nimport BackButton from '../components/navigation/BackButton'\nimport ChatInput from '../components/chat/ChatInput'\n\nconst JoinPage = () => {\n  const [inputCode, setInputCode] = useState('')\n  const history = useHistory()\n  \n  useEffect(() => {\n    socket.connect()\n  }, [])\n\n  const handleEnterClick = (event) => {\n    event.preventDefault()\n    socket.emit('joining', inputCode, ({ error }) => {\n      if (error) {\n        alert(error)\n      } else {\n        socket.isHost = true\n        history.push(`/online/${inputCode}`)\n      }\n    })\n  }\n\n  return (\n    <div className=\"online__container\">\n      <MenuHeader />\n      <div className=\"join__container\">\n        <h1>Join Room</h1>\n        <ChatInput\n          text={inputCode}\n          setText={setInputCode}\n          sendMessage={handleEnterClick}\n          prompt='Enter room code'/>\n      </div>\n      <BackButton />\n    </div>\n  )\n}\n\nexport default JoinPage","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport socket from '../socket'\nimport { toastful, Toastful } from 'react-toastful'\nimport BackButton from '../components/navigation/BackButton'\nimport MenuHeader from '../components/navigation/MenuHeader'\n\nconst BASE_URL = 'https://sparkorbital.herokuapp.com'\n\nconst CreatePage = () => {\n  const [code, setCode] = useState('loading...')\n  const history = useHistory()\n\n  useEffect(() => {\n    socket.connect()\n\n    socket.emit('create')\n\n    socket.once('create', roomCode => {\n      setCode(roomCode)\n    })\n\n    socket.once('joining', (roomCode) => {\n      //socket.isHost = true\n      history.push(`/online/${roomCode}`)\n    })\n  }, [])\n\n  const copyCode = () => {\n    navigator.clipboard.writeText(`${BASE_URL}/online/${code}`).then(() => {\n      toastful('Copied URL!',\n        {duration: 1500, position: 'top'})\n    })\n  }\n\n  return (\n    <div className=\"online__container\">\n      <MenuHeader />\n      <h1>Create Room</h1>\n      Your room code is\n      <h1>{code}</h1>\n      Copy this URL to share with your friends:\n      <span className=\"selectable selectable-text\" onClick={copyCode}> <em>{`${BASE_URL}/online/${code}`}</em> </span>\n      <br/>\n      The room will start once one other player joins\n      <BackButton />\n      <Toastful />\n    </div>\n  )\n}\n\nexport default CreatePage","import React, { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport socket from '../socket'\nimport BackButton from '../components/navigation/BackButton'\nimport MenuHeader from '../components/navigation/MenuHeader'\n\nconst WaitingPage = () => {\n  const history = useHistory()\n\n  window.onbeforeunload = () => {\n    socket.emit('leaveWaiting')\n  }\n\n  useEffect(() => {\n    socket.connect()\n\n    socket.emit('waiting', null, (roomCode) => {\n      if (roomCode) {\n        socket.isHost = true\n        history.push(`/online/${roomCode}`)\n      }\n    })\n\n    socket.once('joining', (roomCode) => {\n      history.push(`/online/${roomCode}`)\n    })\n\n    return () => {\n      socket.emit('leaveWaiting')\n    }\n  }, [])\n\n  const handleBackAction = () => {\n    socket.emit('leaveWaiting')\n    history.goBack()\n  }\n  \n  return (\n    <div className=\"online__container\">\n      <MenuHeader />\n      <h1 className=\"loading\">Waiting for players</h1>\n      <br/>\n      The room will start once one other player joins.\n      <br/>\n      <BackButton action={handleBackAction} />\n    </div>\n  )\n}\n\nexport default WaitingPage","import React from 'react';\n\nimport Util from '../../utils/utils'\n\n\nconst JourneyEntry = ({data}) => {\n\n  const Entry = () => {\n    return (\n      <>\n        <h1> My Journey </h1>\n        <div className=\"profile__container journey-entry\">\n          <div>\n            <p className=\"journey-entry__title\"> {data.question} </p>\n            <p className=\"journey-entry__date\"> {Util.timestampToString(data.timestamp)} </p>\n\n            {data.picture ? \n              <div className=\"journey__pic-container\">\n                <img src={data.picture.pic.urls.small} className=\"journey-entry__pic\"/>\n              </div>\n              : null }\n          </div>\n          <p className=\"journey-entry__reflection\">{data.reflection} </p>\n        </div>\n      </>\n    )\n  }\n\n  return (\n    (data) ? Entry() : null\n  )\n}\n\nexport default JourneyEntry;","import React, { useEffect } from 'react';\nimport BackButton from '../components/navigation/BackButton.js';\nimport JourneyEntry from '../components/profile/JourneyEntry.js';\n\nimport {connect} from 'react-redux';\n\nimport { useParams } from 'react-router';\n\nimport { fetchJourneyFromLocalStorage } from '../reducers/soloReducer.js';\n\nconst JourneyPage = ({dispatch, journey}) => {\n\n  let {id} = useParams();\n\n  useEffect(() => {\n    dispatch(fetchJourneyFromLocalStorage());\n  }, [dispatch])\n\n  return (\n    <div>\n      <JourneyEntry data={journey[id]}/>\n\n      <div className=\"menu__navigation-container\">\n        <BackButton />\n      </div>\n    </div>\n  );\n\n};\n\nconst mapStateToProps = (state) => ({\n  journey: state.solo.journey\n});\n\nexport default connect(mapStateToProps)(JourneyPage);","import React, {useEffect, useState} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch, Route\n} from 'react-router-dom';\n\nimport SoloGame from './pages/SoloGame';\nimport GroupGame from './pages/GroupGame';\nimport Profile from './pages/Profile';\nimport About from './pages/About';\nimport OnlineGame from './pages/OnlineGame';\nimport MenuHeader from './components/navigation/MenuHeader';\nimport MenuRouter from './components/navigation/MenuRouter';\nimport JoinPage from './pages/JoinPage'\nimport CreatePage from './pages/CreatePage'\nimport WaitingPage from './pages/WaitingPage'\nimport JourneyPage from './pages/JourneyPage';\n\nconst App = () => {\n\n  const [page, setPage] = useState('home');\n  const [mode, setMode] = useState('none');\n\n  const navigate = (target) => {\n    setPage(target);\n  };\n\n  useEffect(() => {\n    // reset for Milestone 3\n    if (localStorage.getItem('m3')) {\n      return\n    } else {\n      localStorage.setItem('solo_index', '0')\n      localStorage.removeItem('solo_questions')\n      localStorage.setItem('m3', 'true');\n    }\n  }, [])\n\n  return (\n    <Router>\n      <div className=\"site__container\">\n                     \n        <Switch>\n          <Route path=\"/online/:roomCode\">\n            <div className=\"game__container\">\n              <OnlineGame mode={mode} />\n            </div>\n          </Route>\n          <Route path='/random'>\n            <div className='game__container'>\n              <WaitingPage />\n            </div>\n          </Route>\n          <Route path='/join'>\n            <div className=\"game__container\">\n              <JoinPage />\n            </div>\n          </Route>\n          <Route path=\"/create\">\n            <div className=\"game__container\">\n              <CreatePage />\n            </div>\n          </Route>\n          <Route path=\"/game\">\n            <div className=\"game__container\">\n              <GroupGame mode={mode}/>\n            </div>\n          </Route>\n          <Route path=\"/solo\">\n            <SoloGame setMode={setMode}/>\n          </Route>\n          <Route path=\"/about\">\n            <div className=\"menu__content-container\">\n              <div className=\"menu__content--data\">\n                <MenuHeader />\n                <About />\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/profile/:id\">\n            <div className=\"menu__content-container\">\n              <div className=\"menu__content--data\">\n                <JourneyPage/>\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/profile\">\n            <div className=\"menu__content-container\">\n              <div className=\"menu__content--data\">\n                <Profile mode={mode} setPage={navigate} setMode={setMode}/>\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/\">\n            <div className=\"menu__content-container\">\n              <div className=\"menu__content--data\">\n                <MenuHeader />\n                <MenuRouter setPage={navigate} setMode={setMode}/>\n              </div>\n            </div>\n          </Route>\n        </Switch>\n\n\n      </div>\n      \n    </Router>\n  );\n};\n\nexport default App;","import {combineReducers} from 'redux';\n\nimport questionsReducer from './questionsReducer';\nimport soloReducer from './soloReducer';\n\nconst rootReducer = combineReducers({\n  questions: questionsReducer,\n  solo: soloReducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport {render} from 'react-dom';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport './styles/index.css';\n\nimport App from './App';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}