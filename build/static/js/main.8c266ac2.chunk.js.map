{"version":3,"sources":["assets/Logo_conversations.svg","components/navigation/BackButton.js","components/navigation/NavBar.js","components/navigation/LinkButton.js","utils/utils.js","components/cards/QuestionCard.js","services/pictures.js","components/cards/PictureGallery.js","components/cards/PictureCard.js","components/cards/SoloInput.js","services/questions.js","reducers/soloReducer.js","components/cards/SoloStack.js","pages/SoloGame.js","components/cards/QuestionStack.js","actions/questionsActions.js","assets/mode_deep.svg","assets/mode_icebreakers.svg","assets/mode_thisorthat.svg","pages/GroupGame.js","components/profile/Favourites.js","components/profile/JourneyStack.js","pages/Profile.js","pages/About.js","socket.js","components/chat/ChatMessage.js","components/chat/ChatMessages.js","components/chat/ChatInput.js","components/chat/Chat.js","pages/OnlineGame.js","components/navigation/MenuHeader.js","components/navigation/MenuRouter.js","pages/JoinPage.js","pages/CreatePage.js","pages/WaitingPage.js","components/profile/JourneyEntry.js","pages/JourneyPage.js","App.js","actions/picturesActions.js","reducers/picturesReducer.js","reducers/questionsReducer.js","reducers/index.js","index.js"],"names":["BackButton","action","history","useHistory","buttonAction","undefined","goBack","className","onClick","icon","faChevronLeft","NavBar","type","mode","src","Logo","alt","LinkButton","title","subtitle","readFavsFromStorage","JSON","parse","localStorage","getItem","shuffle","a","j","x","i","length","Math","floor","random","timestampToMM","timestamp","Date","getMonth","timestampToString","padZero","dd","d","getDate","m","y","getFullYear","t","getHours","getMinutes","writeToFavs","e","old","push","setItem","stringify","toggleFromFavs","index","findIndex","o","id","splice","isInFavs","checkSoloReady","stamp","now","getfullMonth","getfullYear","setSoloTimestamp","writeSoloReflection","content","save","question","reflection","picture","current","QuestionCard","data","isFavoritible","color","displayToast","useState","isFav","setIsFav","faStar","favIcon","setFavIcon","col","setColor","setQuestion","useEffect","options","this","that","Util","handleFav","preventDefault","handleShare","navigator","share","text","catch","error","console","log","clipboard","writeText","then","faStar_solid","Object","keys","size","onTouchEnd","faShareAlt","baseUrl","getPictureFromUnsplash","axios","get","res","pictureByTopic","topic","pictureByTopicCount","count","pictureByQueryCount","query","PictureGallery","pictures","isSelectable","handleSelect","select","setSelect","submitSelect","alert","toggleSelect","pic","map","onMouseUp","urls","small","alt_description","PictureCard","isActive","setPicture","picturesService","pic_this","pic_that","style","margin","SoloInput","submitHandler","colors","setReflection","picData","setData","selectedPicture","setSelected","handleReflection","target","value","handleSubmit","renderForm","onChange","spellCheck","canPicture","getAllQuestions","getAllQuestionsFromCategory","category","getQuestionsFromCategory","resOne","resTwo","resThree","result","args","numOfOne","numOfTwo","numOfThree","levelOne","slice","levelTwo","levelThree","getSoloQuestions","lv_small","coin","lv_big","CHECK_READY","IS_READY","IS_UNREADY","FETCH_SOLO_QUESTIONS_SUCCESS","FETCH_SOLO_QUESTIONS_FAILURE","FETCH_JOURNEY","THROW_ERROR","initialState","soloReady","loading","hasErrors","journey","questions","checkSoloStatus","throwError","dispatch","isReady","fetchJourneyFromLocalStorage","payload","connect","state","solo","setIndex","questionsService","Number","toString","hasError","stage","setStage","startGame","message","toastful","position","duration","to","QuestionStack","qnList","setQnList","handleSwipe","end","clearStyle","background","border","overflow","height","maxWidth","q","idx","onSwipe","GET_QUESTION","GET_QUESTION_SUCCESS","GET_QUESTION_FAILURE","getQuestion","getQuestionSuccess","getQuestionFailure","logo_deep","logo_icebreakers","logo_thisorthat","renderMode","Favourites","favs","setPage","setMode","Profile","setFavs","About","href","socket","io","autoConnect","onAny","event","ChatMessage","user","from","ReactEmoji","emojify","ChatMessages","messages","ChatInput","setText","sendMessage","prompt","onSubmit","autoFocus","placeholder","onKeyPress","key","faArrowCircleRight","Chat","setQuestions","setUser","setMessages","roomCode","useParams","window","onbeforeunload","emit","sessionStorage","removeItem","isHost","questionService","on","userID","auth","concat","off","confirm","OnlineGame","handleClick","MenuHeader","MenuRouter","menu","setMenu","JoinPage","inputCode","setInputCode","BASE_URL","CreatePage","code","setCode","once","WaitingPage","JourneyEntry","App","navigate","path","GET_PICTURE","GET_PICTURE_SUCCESS","GET_PICTURE_FAILURE","rootReducer","combineReducers","actions","store","createStore","composeWithDevTools","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c266ac2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo_conversations.9105b769.svg\";","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\n\n\nconst BackButton = ({action}) => {\n\n  const history = useHistory();\n\n  const goBack = () => {\n    history.goBack();\n  };\n\n  const buttonAction = action === undefined ? goBack : action;\n\n  return (\n    <div className=\"menu__linkbutton--back\" onClick={buttonAction} >\n      <FontAwesomeIcon icon={faChevronLeft} /> back\n    </div>\n  );\n};\n    \nexport default BackButton;\n","import React from 'react';\nimport Logo from '../../assets/Logo_conversations.svg';\nimport BackButton from './BackButton';\n\nconst NavBar = ({mode}) => {\n\n  let type = mode === 'game' ? 'game' : 'profile';\n\n  return (\n    <div className={`navbar ${type}__navbar`}>\n      <div className=\"game__navbar--back\"> <BackButton /> </div>\n      <img src={Logo} className=\"site__sparklogo game__navbar--logo\" alt=\"SPARK logo\"/>\n    </div>\n  );\n};\n\nexport default NavBar;","import React from 'react';\n\nconst LinkButton = ({title, subtitle, action}) => {\n\n  const buttonAction = action === undefined ? action : action;\n\n  return (\n    <div className=\"menu__linkbutton selectable\" onClick={buttonAction}>\n      <span className=\"menu__linkbutton--title\"> {title} </span> <br/>\n      <span className=\"menu__linkbutton--subtitle\"> {subtitle} </span>\n    </div>\n  );\n};\n\nexport default LinkButton;","// shuffle array in-place using Fisher-Yates\n// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array\n\nconst shuffle = (a) => {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n\nconst timestampToMM = (timestamp) => {\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May',\n    'Jun', 'Jul', 'Aug','Sep','Oct','Nov','Dec']\n  return months[new Date(timestamp).getMonth()-1];\n}\n\nconst timestampToString = (timestamp) => {\n\n  function padZero(i) {\n    if (i < 10) { \n      i = '0' + i;\n    }\n    return i;\n  }\n\n  const dd = new Date(timestamp);\n  const d = dd.getDate();\n  const months = ['January', 'February', 'March', 'April', 'May',\n    'June', 'July', 'August','September','October','November','December']\n  const m = months[dd.getMonth()-1];\n  const y = dd.getFullYear();\n  const t = `${padZero(dd.getHours())}:${padZero(dd.getMinutes())}`;\n\n  return (`${d} ${m} ${y}, ${t}`);\n}\n\nconst writeToFavs = (e) => {\n  var old = readFavsFromStorage();\n  old.push(e);\n  localStorage.setItem('favs', JSON.stringify(old));\n}\n\nconst toggleFromFavs = (e) => {\n  var old = readFavsFromStorage();\n  var index = old.findIndex(o => o.id === e.id);\n  if (index === -1) {\n    old.push(e);\n  } else {\n    old.splice(index, 1);\n  }\n  localStorage.setItem('favs', JSON.stringify(old));\n}\n\nconst isInFavs = (e) => {\n  var old = readFavsFromStorage();\n  return (old.findIndex(o => o.id === e.id) != -1);\n}\n\n// assumes that favs exist in localstorage\n// returns array containing favs\nconst readFavsFromStorage = () => {\n  return JSON.parse(localStorage.getItem('favs')) || [];\n}\n\nconst checkSoloReady = () => {\n  // read last posted date in solo timestamp\n  // if timestamp doesn't exist, guaranteed to be ready.\n  // is current day is a different date?\n  // if so, return true\n  // otherwise, return false\n  if (!JSON.parse(localStorage.getItem('solo'))) {\n    return true;\n  } else {\n    const stamp = new Date(JSON.parse(localStorage.getItem('solo')));\n    const now = new Date(Date.now());\n    if (stamp.getDate() !== now.getDate() &&\n        stamp.getfullMonth() !== now.getfullMonth() &&\n        stamp.getfullYear() !== now.getfullYear()) {\n      return true;\n    }\n    return false;\n  }\n}\n\nconst setSoloTimestamp = () => {\n  let now = Date.now();\n  localStorage.setItem('solo', JSON.stringify(now));\n}\n\nconst writeSoloReflection = (content) => {\n  let now = Date.now();\n  let save = {\n    question: content.question,\n    reflection: content.reflection,\n    picture: content.picture || false,\n    timestamp: now\n  }\n  let current = JSON.parse(localStorage.getItem('reflection')) || [];\n  localStorage.setItem('reflection', JSON.stringify([...current, save]));\n}\n\nexport default {\n  shuffle, timestampToMM, timestampToString,\n  writeToFavs, toggleFromFavs, isInFavs, readFavsFromStorage,\n  checkSoloReady, setSoloTimestamp, writeSoloReflection\n}","import React, {useState, useEffect} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-regular-svg-icons';\nimport { faStar as faStar_solid} from '@fortawesome/free-solid-svg-icons';\nimport { faShareAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport Util from '../../utils/utils'\n\nconst QuestionCard = ({data, isFavoritible=true, color, displayToast, mode}) => {\n\n  const [isFav, setIsFav] = useState(false);\n  const [favIcon, setFavIcon] = useState(faStar);\n  const [col, setColor] = useState(null);\n  const [question, setQuestion] = useState('Loading question...');\n\n  useEffect(() => {\n    if (col == null) {\n      setColor(color);  \n    }\n\n    if (mode === 'this-or-that') {\n      let options = [data.this, data.that];\n      Util.shuffle(options);\n      setQuestion(`${options[0]} or ${options[1]}?`);\n    } else {\n      setQuestion(data.question);\n    }\n  }, [])\n  \n  const handleFav = (e) => {\n    e.preventDefault();\n    Util.toggleFromFavs(data);\n    if (isFav) {\n      displayToast('Removed from favourites');\n    } else {\n      displayToast('Added to favourites')\n    }\n    setIsFav(!isFav);\n  }\n\n  const handleShare = () => {\n    if (navigator.share) {\n      navigator.share({\n        title: 'SPARK Meaningful Conversations',\n        text: question,\n      }).catch((error) => console.log('Error sharing', error))\n    } else {\n      navigator.clipboard.writeText(question).then(() => {\n        displayToast('Copied question to clipboard! Share it with your friends!')\n      })\n    }\n  }\n\n  useEffect(() => {\n    setIsFav(Util.isInFavs(data));\n  },[])\n\n  useEffect(() => {\n    if (isFav) { setFavIcon(faStar_solid) }\n    else { setFavIcon(faStar) }\n  }, [isFav])\n\n  const renderQuestion = () => {\n    if (Object.keys(data).length === 0) {\n      // if initial data for question is not loaded yet\n      // (Default is an empty Object)\n      return null;\n    } else {\n      return (\n        <div className={`game__question-card --${col}`}>\n          <p className=\"game__question-card--title disable--select\"> {question} </p>\n\n          {isFavoritible \n            ? <div className=\"game__question-card--icons-container disable--select\"> \n              <FontAwesomeIcon icon={favIcon} className=\"game__question-card--icon\" size='3x'\n                onClick={handleFav} \n                onTouchEnd={handleFav}\n                title={isFav ? 'Remove from favourites' : 'Add to favourites'} />\n              <FontAwesomeIcon icon={faShareAlt} className=\"game__question-card--icon\" size='3x'\n                onClick={handleShare} \n                onTouchEnd={handleShare}\n                title=\"Share\" />\n            </div> \n            : <p> </p>\n          }\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"game__question-card--content-container\">\n      {renderQuestion()}\n    </div>\n  );\n};\n\nexport default QuestionCard;","import axios from 'axios'\nconst baseUrl = '/api/pictures'\n\nconst getPictureFromUnsplash = async () => {\n  const res = await axios.get(`${baseUrl}/random`)\n\n  return res.data;\n};\n\nconst pictureByTopic = async (topic) => {\n  const res = await axios.get(`${baseUrl}/topic/${topic}`)\n\n  return res.data;\n}\n\nconst pictureByTopicCount = async (topic, count) => {\n  const res = await axios.get(`${baseUrl}/topic/${topic}/${count}`)\n\n  return res.data;\n}\n\nconst pictureByQueryCount = async (query, count) => {\n  const res = await axios.get(`${baseUrl}/query/${query}/${count}`)\n\n  return res.data;\n}\n\nexport default { \n  getPictureFromUnsplash,\n  pictureByTopic, pictureByTopicCount,\n  pictureByQueryCount \n}","import React, { useState } from 'react';\n\nconst PictureGallery = ({pictures, isSelectable=false, handleSelect}) => {\n\n  const [select, setSelect] = useState(null);\n\n  const submitSelect = () => {\n    if(select == null) {\n      alert('You did not select!');\n    } else {\n      handleSelect(select)\n    }\n  }\n\n  const toggleSelect = (e, pic) => {\n    e.preventDefault();\n    if ( select === null || select.id != pic.id) {\n      setSelect(pic)\n    } else {\n      setSelect(null)\n    }\n  }\n\n  const renderGallery = () => {\n    if (pictures.length === 0) {\n      // if initial data for picture is not loaded yet\n      // (Default is an empty Object)\n      return null;\n    } else {\n      return (\n        <>\n          <div className=\"card__picture--gallery\">\n            {pictures.map(pic => \n              <div key={pic.id} \n                className={`card__picture--container ${isSelectable ? 'selectable' : ''} \n                ${(select) ? select.id==pic.id ? 'selected' : '' : ''}`}\n                onTouchEnd={(e) => toggleSelect(e, pic)}\n                onMouseUp={(e) => toggleSelect(e, pic)}>\n                <img src={pic.urls.small} alt={pic.alt_description}\n                  className={`card__picture--thumb ${(pictures.length === 1) ? 'card__picture--solo' : ''}`}/>\n                {/* <p> Picture by&nbsp;\n                <a href={pic.links.html} className=\"link\">{pic.user.name}</a> from&nbsp;\n                <a href=\"https://unsplash.com\" className=\"link\">Unsplash</a>\n              </p> */}\n              </div>\n            )}\n\n          </div>\n        \n          <div>\n            {isSelectable ? <button onClick={submitSelect} className=\"input--button --amethyst selectable\"> Select </button> : null}\n          </div>\n        </>\n      );\n    }\n  };\n\n  return (\n    renderGallery()\n  );\n};\n\nexport default PictureGallery;","import React, {useEffect, useState} from 'react';\n\nimport picturesService from '../../services/pictures'\n\nimport Util from '../../utils/utils'\nimport PictureGallery from './PictureGallery';\n\nconst PictureCard = ({topic, data, isActive, mode, isSelectable=false, handleSelect}) => {\n\n  const [pic, setPicture] = useState([]);\n  const [question, setQuestion] = useState('Loading question...');\n\n  useEffect(async () => {\n    if (data.this) {\n      // this-or-that mode\n      let options = [data.this, data.that];\n      Util.shuffle(options);\n      if(mode === 'this-or-that'){\n        setQuestion(`${options[0]} or ${options[1]}?`);\n      }\n      let pic_this = await picturesService.pictureByQueryCount(data.this,1);\n      let pic_that = await picturesService.pictureByQueryCount(data.that,1);\n      setPicture([...pic_this, ...pic_that]);\n    } else if (data.pic) {\n      // contains picture already\n      setPicture([data.pic]); \n    } else if (mode === 'online') {\n      // fetch a picture otherwise\n      let res = await picturesService.pictureByTopicCount(topic,2);\n      setPicture([...res]);\n    } else {\n      // fetch a picture otherwise\n      let res = await picturesService.pictureByTopicCount(topic,5);\n      setPicture([...res]);\n    }\n    setQuestion(data.question);\n  }, [])\n\n  const renderPicture = () => {\n    if (Object.keys(pic).length === 0) {\n      // if initial data for picture is not loaded yet\n      // (Default is an empty Object)\n      return null;\n    } else {\n      return (\n        <PictureGallery pictures={pic} isSelectable={isSelectable} handleSelect={handleSelect}/>\n      );\n    }\n  };\n\n  return (\n    <div className={`card__picture ${isActive ? 'active' : 'inactive'} ${isSelectable ? '' : 'disable--select'}`}>\n      <div style={{margin:'20px'}}>\n        <p className=\"card__picture--question\"> {question} </p>\n      </div>\n\n      {renderPicture()}\n    </div>\n  );\n};\n\nexport default PictureCard;","import React, {useState } from 'react';\nimport QuestionCard from './QuestionCard';\nimport PictureCard from './PictureCard';\n\nconst SoloInput = ({data, displayToast, submitHandler}) => {\n  let colors = ['jade', 'topaz', 'amethyst', 'amber'];\n\n  const [reflection, setReflection] = useState('');\n  const [col, setColor] = useState(colors[Math.floor(Math.random() * colors.length)]);\n  const [picData, setData] = useState(null);\n  const [selectedPicture, setSelected] = useState(null);\n\n  const handleReflection = (e) => {\n    setReflection(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (reflection == '') {\n      displayToast('Please write out a reflection!');\n    } else {\n      submitHandler({\n        reflection: reflection,\n        picture: picData || null\n      });\n      setReflection('');\n      displayToast('Response Submitted!');\n    }\n  }\n\n  const selectPicture = (pic) => {\n    setSelected(pic)\n\n    //update question\n    data = {...data, pic: {...pic}};\n    setData(data)\n  }\n\n  const renderForm = () => {\n    return (\n      <div className=\"solo__input--form\">\n\n        {selectedPicture\n          ?\n          <div className=\"solo__input--pic\"> \n            <PictureCard key='p' data={picData} mode='solo' isActive={true} />\n          </div>\n          : null\n        }\n\n        <h1 className=\"solo__input--title\">Reflection</h1>\n        <textarea value={reflection} onChange={handleReflection}\n          spellCheck=\"false\"\n          className=\"textarea--solid\"/>\n        <button onClick={handleSubmit} onTouchEnd={handleSubmit}\n          className={`input--button selectable end --${col}`}> Save </button>\n      </div>\n    )\n\n  }\n\n  return (\n    <div className=\"solo__input\">\n      {data.canPicture \n        ? <>\n          {!selectedPicture \n            ? <PictureCard topic={data.topic} data={data} isActive={true} mode='solo'\n              isSelectable={true} handleSelect={selectPicture}/>\n            : renderForm()\n          }\n        </>\n        : <>\n          <QuestionCard data={data} isFavoritible={true} displayToast={displayToast}\n            color={col} mode='solo'/>\n          {renderForm()}\n        </>\n      }\n    </div>\n  );\n};\n\nexport default SoloInput","import axios from 'axios'\nimport Util from '../utils/utils'\n\nconst baseUrl = '/api/questions'\n\nconst getAllQuestions = async () => {\n  const res = await axios.get(baseUrl);\n\n  // right now it's received in an array\n  return res.data;\n};\n\nconst getAllQuestionsFromCategory = async (category) => {\n  const res = await axios.get(baseUrl + '/' + category);\n\n  return res.data;\n};\n\nconst getQuestionsFromCategory = async (category, ...args) => {\n  const resOne = await axios.get(`${baseUrl}/${category}/1`)\n  const resTwo = await axios.get(`${baseUrl}/${category}/2`)\n  const resThree = await axios.get(`${baseUrl}/${category}/3`)\n\n  let result = []\n  const [numOfOne, numOfTwo, numOfThree] = [...args]\n  if (numOfOne) {\n    const levelOne = Util.shuffle(resOne.data).slice(0, numOfOne)\n    result = [...result, ...levelOne]\n  }\n  if (numOfTwo) {\n    const levelTwo = Util.shuffle(resTwo.data).slice(0, numOfTwo)\n    result = [...result, ...levelTwo]\n  }\n  if (numOfThree) {\n    const levelThree = Util.shuffle(resThree.data).slice(0, numOfThree)\n    result = [...result, ...levelThree]\n  }\n  return result\n}\n\nconst getSoloQuestions = async () => {\n  let lv_small = await axios.get(baseUrl + '/solo/1')\n  const coin = [2,2,2,2,3][Math.floor(Math.random()*5)] // rng for 80% lv2, 20% lv3\n  let lv_big = await axios.get(baseUrl + '/solo/' + coin);\n\n  // pick two from small\n  lv_small = Util.shuffle(lv_small.data).slice(0,2);\n\n  // pick one from big\n  lv_big = lv_big.data[Math.floor(Math.random() * lv_big.data.length)];\n  \n  return [...lv_small, lv_big];\n}\n\nexport default { getAllQuestions, getAllQuestionsFromCategory, getQuestionsFromCategory, getSoloQuestions }\n","import Util from '../utils/utils';\nimport questionsService from '../services/questions';\n\n// Actions\nconst CHECK_READY = 'CHECK_SOLO_READY';\nconst IS_READY = 'IS_READY';\nconst IS_UNREADY = 'IS_UNREADY';\nconst FETCH_SOLO_QUESTIONS_SUCCESS = 'FETCH_SOLO_QUESTIONS_SUCCESS';\nconst FETCH_SOLO_QUESTIONS_FAILURE = 'FETCH_SOLO_QUESTIONS_FAILURE';\nconst FETCH_JOURNEY = 'FETCH_JOURNEY';\nconst THROW_ERROR = 'THROW_ERROR';\n\n// Reducer\nexport const initialState = {\n  soloReady: true,\n  loading: false,\n  hasErrors: false,\n  journey: [],\n  questions: []\n};\n\nexport default function soloReducer(state = initialState, action) {\n  switch (action.type) {\n\n  case CHECK_READY:\n    return { ...state, loading: true };\n  case IS_READY:\n    return { ...state, soloReady: true, loading: false };\n  case IS_UNREADY:\n    return { ...state, soloReady: false, loading: false };\n  case FETCH_SOLO_QUESTIONS_SUCCESS:\n    return { ...state, loading: false, questions: action.payload };\n  case FETCH_SOLO_QUESTIONS_FAILURE:\n    return { ...state, loading: false, hasErrors: true };\n  case FETCH_JOURNEY:\n    return { ...state, journey: action.payload};\n  case THROW_ERROR:\n    return { ...state, hasErrors: true};\n  default:\n    return state;\n\n  }\n}\n\n// Action Creators\nexport const checkSoloStatus = () => ({\n  type: CHECK_READY\n})\n\nexport const SoloStatusReady = () => ({\n  type: IS_READY\n})\n\nexport const SoloStatusUnready = () => ({\n  type: IS_UNREADY\n})\n\nexport const fetchSoloQuestionsSuccess = (questions) => ({\n  type: FETCH_SOLO_QUESTIONS_SUCCESS,\n  payload: questions\n})\n\nexport const fetchSoloQuestionsFailure = () => ({\n  type: FETCH_SOLO_QUESTIONS_FAILURE\n})\n\nexport const fetchJourney = (journey) => ({\n  type: FETCH_JOURNEY,\n  payload: journey\n})\n\nexport const throwError = () =>  ({\n  type: THROW_ERROR\n})\n\n// Thunks\nexport function checkSoloReady() {\n  return async (dispatch) => {\n    dispatch(checkSoloStatus());\n    try {\n      const isReady = Util.checkSoloReady()\n      if (isReady) {\n        dispatch(SoloStatusReady());\n      } else {\n        dispatch(SoloStatusUnready());\n      }\n    } catch (error) {\n      dispatch(throwError());\n    }\n  }\n}\n\nexport function fetchSoloQuestions() {\n  return async (dispatch) => {\n    dispatch(checkSoloStatus());\n    try {\n      let res;\n      if (!localStorage.getItem('solo_questions')) {\n        res = await questionsService.getSoloQuestions();\n        localStorage.setItem('solo_questions', JSON.stringify(res));\n      } else {\n        res = JSON.parse(localStorage.getItem('solo_questions'));\n      }\n      dispatch(fetchSoloQuestionsSuccess(res));\n    } catch (error) {\n      dispatch(fetchSoloQuestionsFailure());\n    }\n  }\n}\n\nexport function fetchJourneyFromLocalStorage() {\n  return (dispatch) => {\n    dispatch(checkSoloStatus());\n    try {\n      let res = JSON.parse(localStorage.getItem('reflection')) || [];\n      dispatch(fetchJourney(res));\n    } catch (error) {\n      dispatch(throwError())\n    }\n  }\n}","import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport SoloInput from './SoloInput';\n\nimport { fetchSoloQuestions } from '../../reducers/soloReducer';\nimport Util from '../../utils/utils';\n\nconst SoloStack = ({dispatch, loading, questions, hasErrors, displayToast}) => {\n\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    dispatch(fetchSoloQuestions());\n    setIndex(Number(localStorage.getItem('solo_index')));\n  }, [dispatch]);\n\n  const submitHandler = (content) => {\n    // write to reflections\n    Util.writeSoloReflection({\n      question: questions[index].question,\n      reflection: content.reflection,\n      picture: content.picture || null\n    });\n\n    // increment index unless max\n    setIndex(index+1);\n    localStorage.setItem('solo_index', (index+1).toString());\n\n    // write new timestamp\n    if((index+1)==questions.length){\n      Util.setSoloTimestamp();\n    }\n  }\n\n  const renderEnd = () => {\n    return <p> That&apos;s all the questions for today! Your responses are saved in your Journey. </p>\n  }\n\n  const renderStack = () => {\n    if (loading) {\n      return <p> loading </p> \n    } else if (hasErrors) {\n      return <p> error :( </p>\n    } else if (questions) {\n      if (index==questions.length) { return renderEnd() }\n      else{\n        return (\n          <>\n            <SoloInput key={index} data={questions[index]}\n              displayToast={displayToast}\n              submitHandler={submitHandler}/>\n          </>\n        )\n      }\n      \n    } else {\n      return <p> fatal error </p>\n    }\n  }\n\n  return (\n    renderStack()\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.solo.loading,\n  questions: state.solo.questions,\n  hasErrors: state.solo.hasErrors,\n});\n\nexport default connect(mapStateToProps)(SoloStack);","import React, { useEffect, useState } from 'react';\nimport {\n  Link\n} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport '../styles/index.css';\nimport NavBar from '../components/navigation/NavBar';\nimport LinkButton from '../components/navigation/LinkButton';\nimport SoloStack from '../components/cards/SoloStack';\nimport { Toastful, toastful } from 'react-toastful';\nimport { checkSoloReady } from '../reducers/soloReducer';\n\n\nconst SoloGame = ({dispatch, soloReady, loading, hasError}) => {\n\n  const [stage, setStage] = useState('menu')\n\n  useEffect(() => {\n    dispatch(checkSoloReady());\n  },[dispatch])\n\n  const startGame = () => {\n    setStage('game');\n  }\n\n  const displayToast = (message) => {\n    toastful(message, {position: 'top', duration: 1500});\n  }\n\n  const renderStart = () => {\n    if (hasError) {\n      <p> Sorry, something went wrong :( </p>\n    }\n    if (loading) {\n      <p> loading... </p>\n    }\n    if (soloReady) {\n      return (\n        <>\n          <p> Hit start to begin! </p>\n          <LinkButton title=\"Start\" action={startGame}/>\n        </>\n      )\n    } else {\n      return (<p> You have completed all 3 questions today! Come back tomorrow. </p>)\n    }\n  }\n\n  const renderSolo = () => {\n    if (stage === 'menu') {\n      return (\n        <div className=\"solo__welcome\">\n          <p className=\"card__picture--question\"> Welcome to Solo mode! </p>\n          <p> Every day, you&apos;ll receive 3 thought provoking questions. \n          Write down answers that will be saved to your personal <Link className=\"text__link\" to=\"/profile\"> Journey </Link> </p>\n          <p> <strong>NOTE:</strong> We do not store any of your data on servers.\n        It is all stored in your local browser storage. </p>\n          {renderStart()}\n        </div>\n      )\n    } else if (stage === 'game') {\n      return (\n        <SoloStack displayToast={displayToast}/>\n      )\n    }\n  };\n\n  return (\n    <div className=\"solo\">\n      {renderSolo()}\n\n      <Toastful />\n      <NavBar />\n    </div>\n  );\n\n};\n\nconst mapStateToProps = (state) => ({\n  soloReady: state.solo.soloReady,\n  loading: state.solo.loading,\n  hasError: state.solo.hasError\n});\n\nexport default connect(mapStateToProps)(SoloGame);","import React, {useState, useEffect} from 'react';\nimport QuestionCard from './QuestionCard';\nimport PictureCard from './PictureCard';\nimport {Card, CardWrapper} from 'react-swipeable-cards';\n\nconst QuestionStack = ({questions, mode, isFavoritible, displayToast}) => {\n\n  const [qnList, setQnList] = useState([]);\n  const [index, setIndex] = useState(0);\n  let colors = ['topaz', 'amber', 'amethyst', 'jade'];\n\n  useEffect(() => {\n    setQnList(questions.slice(0,5));\n    handleSwipe()\n  }, []);\n\n  const handleSwipe = () => {\n    let offset = 5;\n    setIndex(index + 1);\n    let end = index+offset >= questions.length ? questions.length : index+offset\n    setQnList(questions.slice(index, end));\n  }\n\n  const clearStyle = {\n    background: 'transparent',\n    border: 'none',\n    overflow: 'visible',\n    height: 'auto',\n    maxWidth: '800px'\n  }\n\n  return (\n    <CardWrapper className=\"game__question-card--container\">\n      {qnList.map((q, idx) => \n        <Card key={q.id} onSwipe={handleSwipe} style={clearStyle}>\n          {q.canPicture \n            ? <PictureCard topic={q.topic} data={q} isActive={idx===0} mode={mode}/>\n            : <QuestionCard data={q} isFavoritible={isFavoritible} displayToast={displayToast}\n              color={colors[Math.floor(Math.random() * colors.length)]} mode={mode}/>\n          }\n        </Card>\n      )}\n    </CardWrapper>\n  );\n};\n\nexport default QuestionStack;","import Util from '../utils/utils';\n\nimport questionsService from '../services/questions';\n\nexport const GET_QUESTION = 'GET_QUESTION';\nexport const GET_QUESTION_SUCCESS = 'GET_QUESTION_SUCCESS';\nexport const GET_QUESTION_FAILURE = 'GET_QUESTION_FAILURE';\n\nexport const getQuestion = () => ({\n  type: GET_QUESTION,\n});\n\nexport const getQuestionSuccess = (questions) => ({\n  type: GET_QUESTION_SUCCESS,\n  payload: questions,\n});\n\nexport const getQuestionFailure = () => ({\n  type: GET_QUESTION_FAILURE,\n});\n\nexport function fetchQuestion() {\n  return async (dispatch) => {\n    dispatch(getQuestion());\n\n    try {\n      const res = await questionsService.getAllQuestions();\n\n      const data = res;\n      // const data = res[Math.floor(Math.random() * res.length)];\n\n      dispatch(getQuestionSuccess(data));\n    } catch (error) {\n      dispatch(getQuestionFailure());\n    }\n  };\n}\n\nexport function fetchQuestionsFromCategory(category) {\n  return async (dispatch) => {\n    dispatch(getQuestion());\n\n    try {\n      let res;\n      if (category === 'favourites') {\n        res = await Util.readFavsFromStorage();\n      } else {\n        res = await questionsService.getAllQuestionsFromCategory(category);\n      }\n      \n      const data = res;\n\n      dispatch(getQuestionSuccess(data));\n    } catch (error) {\n      dispatch(getQuestionFailure());\n    }\n  }\n}","export default __webpack_public_path__ + \"static/media/mode_deep.04293f89.svg\";","export default __webpack_public_path__ + \"static/media/mode_icebreakers.a35ce8ea.svg\";","export default __webpack_public_path__ + \"static/media/mode_thisorthat.e728f6b4.svg\";","import React, { useEffect } from 'react';\nimport {connect} from 'react-redux';\n\nimport QuestionStack from '../components/cards/QuestionStack';\nimport NavBar from '../components/navigation/NavBar';\n\nimport {fetchQuestionsFromCategory} from '../actions/questionsActions';\nimport Util from '../utils/utils';\n\nimport logo_deep from '../assets/mode_deep.svg';\nimport logo_icebreakers from '../assets/mode_icebreakers.svg';\nimport logo_thisorthat from '../assets/mode_thisorthat.svg';\n\nimport '../styles/index.css';\nimport { toastful, Toastful } from 'react-toastful';\n\n\nconst GroupGame = ({dispatch, loading, questions, hasErrors, mode}) => {\n\n  useEffect(() => {\n    dispatch(fetchQuestionsFromCategory(mode));\n  }, [dispatch]);\n\n  const renderQuestion = () => {\n    if (loading) return <div className=\"flex-center\"> <p> Loading game... </p> </div>;\n    if (hasErrors) return <div className=\"flex-center\"> <p> An error occured. Please try again. </p> </div>;\n    \n    return <QuestionStack questions={Util.shuffle(questions)} mode={mode}\n      isFavoritible={true} displayToast={displayToast}/>\n  };\n\n  const renderMode = () => {\n    switch(mode) {\n    case('deep'):\n      return <img src={logo_deep} className=\"modeicon\"/>\n    case('icebreakers'):\n      return <img src={logo_icebreakers} className=\"modeicon\" />\n    case('this-or-that'):\n      return <img src={logo_thisorthat} className=\"modeicon\" />\n    default:\n      return null;\n    }\n  }\n\n  const displayToast = (message) => {\n    toastful(message, {position: 'top', duration: 1500});\n  }\n\n  return (\n    <div>\n      {renderQuestion()}\n\n      {renderMode()}\n      <Toastful />\n      <NavBar />\n    </div>\n  );\n\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.questions.loading,\n  questions: state.questions.questions,\n  hasErrors: state.questions.hasErrors,\n});\n\nexport default connect(mapStateToProps)(GroupGame);","import React from 'react';\n\nimport {Link} from 'react-router-dom';\n\nconst Favourites = ({favs, setPage, setMode}) => {\n\n  const renderFavourites = () => {\n    if (favs.length > 0) {\n      return(\n        \n        <Link to=\"/game\" onClick={() => {setPage('game'); setMode('favourites')}}>\n          <div className=\"profile__container selectable\">\n            <h1> Favourites </h1>\n          You have {favs.length} favourited cards.\n          </div>\n        </Link>\n      )\n    } else {\n      return (\n        <div className=\"profile__container\">\n          <h1> Favourites </h1>\n          You have no favourited cards. Click the * icon on any card to add them to favourites!\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div>\n      {renderFavourites()}\n    </div>\n  );\n};\n\nexport default Favourites;","import React, { useEffect } from 'react';\nimport {\n  Link\n} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport '../../styles/index.css';\n\nimport { checkSoloReady, fetchJourneyFromLocalStorage } from '../../reducers/soloReducer';\nimport Util from '../../utils/utils';\n\nconst JourneyStack = ({dispatch, soloReady, journey}) => {\n\n  useEffect(() => {\n    dispatch(fetchJourneyFromLocalStorage());\n    dispatch(checkSoloReady());\n  }, [dispatch]);\n\n  const renderJourneyStack = () => {\n    return (\n      <div className=\"journeystack\">\n        <h1> Journey </h1>\n        {soloReady ? <p> Your daily <Link className=\"text__link\" to=\"/solo\">Solo Questions</Link> are ready! </p> : null}\n        <div className=\"profile__container\">\n          {!journey || journey.length == 0\n            ? <p> Nothing in Journey yet! Play <Link className=\"text__link\" to=\"/solo\">Solo Mode</Link> to record your reflections. </p>\n            : journey.map((j, idx) => \n              <Link to= {`/profile/${idx}`} key={idx} className=\"profile__journey-entry--preview\">\n                <span className=\"profile__journey-entry--preview-date\">\n                  <span className=\"day\">{new Date(j.timestamp).getDate()}</span>\n                  {Util.timestampToMM(j.timestamp)}\n                </span>\n                <span className=\"preview-reflection\"> \n                  <strong> {j.question} </strong> <br/>\n                  <span> {j.reflection} </span>\n                </span>\n                {j.picture ? \n                  <div className=\"picc\">\n                    <img src={j.picture.pic.urls.small} className=\"profile__journey-entry--preview-pic\" />\n                  </div>\n                  : null }\n              </Link>\n            )\n          }\n        </div>\n      </div>\n    )\n  };\n\n  return (\n    <>\n      {renderJourneyStack()}\n    </>\n  );\n\n};\n\nconst mapStateToProps = (state) => ({\n  soloReady: state.solo.soloReady,\n  loading: state.solo.loading,\n  hasError: state.solo.hasError,\n  journey: state.solo.journey\n});\n\nexport default connect(mapStateToProps)(JourneyStack);","import React, {useState, useEffect} from 'react';\nimport Favourites from '../components/profile/Favourites';\nimport NavBar from '../components/navigation/NavBar';\nimport Util from '../utils/utils'\nimport '../styles/index.css';\nimport JourneyStack from '../components/profile/JourneyStack';\n\nconst Profile = ({mode, setPage, setMode}) => {\n\n  const [favs, setFavs] = useState([]);\n\n  useEffect(() => {\n    if (localStorage.getItem('favs')) {\n      setFavs(Util.readFavsFromStorage());\n    }\n  }, []);\n\n  return (\n    <div>\n      <div className=\"game__profile--container\">\n        <h1> My Profile </h1>\n\n        <div> \n          <Favourites favs={favs} setPage={setPage} setMode={setMode}/>\n        </div>\n\n        <JourneyStack />\n\n      </div>\n\n      <NavBar mode={mode}/>\n    </div>\n  );\n\n};\n\nexport default Profile;","import React from 'react';\nimport BackButton from '../components/navigation/BackButton.js';\nimport '../styles/index.css';\n\nconst About = () => {\n\n  return (\n    <div>\n      <h1> About </h1>\n      <p> <strong> SPARK </strong> is an app for creating meaningful conversations. </p>\n\n      <p> This app was created for Orbital 2021.<br/>\n          Images are from <a className=\"text__link\" href=\"https://unsplash.com\">Unsplash</a>, with icons from Font Awesome. <br/>\n          Check out our <a className=\"text__link\" href=\"https://sparkblog.netlify.app\">development blog</a> and <a className=\"text__link\" href=\"https://github.com/qreoct/spark\">Github repositories</a>.\n      </p>\n\n      <h1> Privacy </h1>\n      <p>We believe that your self-reflection is most meaningful when it is private.\n         That’s why we do not store any of your data, chat logs, and preferences on any server.</p>\n      <p>\n        Your responses in the Solo mode are only stored in your browser.\n        Note that clearing your browser data leads to loss of game data!\n      </p>\n\n      <div className=\"menu__navigation--container\">\n        <BackButton />\n      </div>\n    </div>\n  );\n\n};\n\nexport default About;","import { io } from 'socket.io-client';\n\nconst socket = io({ autoConnect: false });\n\nsocket.onAny((event, ...args) => {\n  // console.log('Catch-all listener', event, args);\n});\n\nexport default socket;\n\n","import React from 'react'\nimport ReactEmoji from 'react-emoji'\n\nconst ChatMessage = ({user, content, from, to}) => {\n\n  const renderMessage = () => {\n    if (from === user) {\n      return (\n        <div className=\"msg msg--send\">\n          <div className=\"msg__bubble msg__bubble--send\">\n            <p className=\"msg__text\">{ReactEmoji.emojify(content)}</p>\n          </div>\n        </div>\n      )\n    } else if (from === 'sparkbot') {\n      return (\n        <div className=\"msg\">\n          <div>\n            <p className=\"msg__text msg--announce\">{ReactEmoji.emojify(content)}</p>\n          </div>\n        </div>\n      )\n    } else if (from != user && from != 'sparkbot') {\n      return (\n        <div className=\"msg msg--receive\">\n          <div className=\"msg__bubble msg__bubble--receive\">\n            <p className=\"msg__text\">{ReactEmoji.emojify(content)}</p>\n          </div>\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n\n  return (\n    renderMessage()\n  )\n}\n\nexport default ChatMessage","import React from 'react'\nimport ScrollToBottom from 'react-scroll-to-bottom'\nimport ChatMessage from './ChatMessage'\n\nconst ChatMessages = ({ user, messages }) => (\n  <ScrollToBottom className=\"online__messages\">\n    {messages.map((message, index) => \n      <ChatMessage content={message.content}\n        key={index}\n        user={user}\n        from={message.from}\n        to={message.to}/>)\n    }\n  </ScrollToBottom>\n);\n\nexport default ChatMessages;","import React from 'react'\nimport { faArrowCircleRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst ChatInput = ({ text, setText, sendMessage, prompt='Type a message' }) => {\n  return (\n    <form className='input--form' onSubmit={sendMessage}>\n      <input \n        autoFocus\n        className='textarea--border'\n        type='text'\n        placeholder={prompt}\n        value={text}\n        onChange={event => setText(event.target.value)}\n        onKeyPress={event => event.key === 'Enter' ? sendMessage(event) : null}\n      />\n      <button type='Submit' className=\"input--button selectable\">\n        <FontAwesomeIcon icon={faArrowCircleRight} size='3x' title='Enter' />\n      </button>\n    </form>\n  )\n}\n\nexport default ChatInput\n","import React, { useState, useEffect } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\n\nimport socket from '../../socket.js'\nimport ChatMessages from './ChatMessages'\nimport ChatInput from './ChatInput'\nimport BackButton from '../navigation/BackButton'\nimport questionService from '../../services/questions'\n\nconst Chat = ({ mode, setQuestions }) => {\n  const [text, setText] = useState('')\n  const [user, setUser] = useState('')\n  const [messages, setMessages] = useState([])\n  const { roomCode } = useParams()\n  const history = useHistory()\n\n  // Ensures user leave when closing tab\n  window.onbeforeunload = () => {\n    socket.emit('leave')\n  }\n\n  useEffect(() => {\n   \n    // Redirect user when refreshing\n    const userID = sessionStorage.getItem('userID')\n    if (userID) {\n      sessionStorage.removeItem('userID')\n      history.push('/')\n    }\n    \n    socket.connect()\n    socket.emit('join', (roomCode))\n    \n    if (socket.isHost) {\n      questionService\n        .getQuestionsFromCategory(mode, 5, 4, 1)\n        .then(questions => {\n          setQuestions(questions) \n          socket.emit('setQuestions', questions)\n        })\n    } else {\n      socket.on('setQuestions', (questions) => {\n        setQuestions(questions)\n      })\n    }\n\n    socket.on('session', ({ userID }) => {\n      // attach the user ID to the next reconnection attempts\n      socket.auth = { userID }\n      sessionStorage.setItem('userID', userID);\n      socket.userID = userID\n      setUser(userID)\n    })\n\n\n    socket.on('message', (message) => { //message = {content, from, to}\n      setMessages(messages => messages.concat(message)) //I have no clue why its a function too\n    })\n\n    return () => {\n      sessionStorage.removeItem('userID')\n      socket.auth = null\n      socket.isHost = false\n      socket.emit('leave')\n      socket.off()\n      history.push('/')\n    }\n  }, [socket])\n\n  //function for sending message\n  const sendMessage = (event) => {\n    event.preventDefault()\n\n    if (text) {\n      socket.emit('private message', {content: text})\n      setText('')\n    }\n  }\n\n  const handleChatBackAction = () => {\n    const result = window.confirm('You will not be able to come back, are you sure?')\n    if (result) {\n      history.push('/')\n    }\n  }\n\n  return (\n    <div className='online__chat-container'>\n      <ChatMessages \n        user={user} \n        messages={messages} />\n      <ChatInput \n        text={text}\n        setText={setText}\n        sendMessage={sendMessage} />\n      <BackButton action={handleChatBackAction} />\n    </div> \n  )\n}\n\nexport default Chat","import React, { useState, useEffect } from 'react'\nimport '../styles/index.css'\n\nimport Chat from '../components/chat/Chat'\nimport socket from '../socket'\nimport PictureCard from '../components/cards/PictureCard'\n\nconst OnlineGame = ({ mode }) => {\n  const [question, setQuestion] = useState('')\n  const [questions, setQuestions] = useState([])\n  const [index, setIndex] = useState(0)\n  \n  useEffect(() => {\n    if (questions.length === 0) {\n      setQuestion('loading...')\n    } else if (index >= questions.length) {\n      setQuestion('You\\'ve reached the end of the questions!')\n    } else {\n      setQuestion(questions[index].question)\n    }\n  }, [questions, index])\n\n  useEffect(() => {\n    socket.on('next', () => {\n      setIndex(index => index + 1)\n    })\n  }, [])\n\n  const handleClick = () => {\n    socket.emit('nextQuestion')\n  }\n\n  const renderQuestion = () => {\n    return (\n      <div className=\"online__question\" key={question}>\n        {index == questions.length \n          ?\n          <>\n            <span className=\"card__picture--question\"> {question} </span>\n          </>\n          :\n          <>       \n            {questions.length > 0 && questions[index].canPicture \n              ? <PictureCard topic={questions[index].topic} data={questions[index]} isActive={true} mode={'online'}/>\n              : <span className=\"card__picture--question\"> {question} </span>}\n            <button className=\"selectable input--button center\" onClick={handleClick}> Next </button>\n          </>\n        }\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"online__container\">\n      {renderQuestion()}\n      <Chat mode={mode} setQuestions={setQuestions} />\n    </div>\n  )\n}\n\nexport default OnlineGame","import React from 'react';\nimport Logo from '../../assets/Logo_conversations.svg';\n\nconst MenuHeader = () => {\n\n  return (\n    <div className=\"menu__sparklogo--container\">\n      <img src={Logo} className=\"site__sparklogo\" alt=\"SPARK logo\"/>\n    </div>\n  );\n};\n\nexport default MenuHeader;","import React, { useState } from 'react';\nimport {\n  Link\n} from 'react-router-dom';\nimport BackButton from './BackButton.js';\nimport LinkButton from './LinkButton.js';\n\nconst MenuRouter = ({setPage, setMode}) => {\n\n  const [menu, setMenu] = useState('home');\n\n  switch (menu) {\n  case 'online':\n    return (\n      <div>\n        <div className=\"menu__router--container\">\n          <Link to=\"/create\" onClick={() => {setPage('create'); setMode('online-room')}}><LinkButton key='Create' title=\"Create\" subtitle=\"Create your unique room\" /></Link>\n          <Link to='/join' onClick={() => {setPage('join'); setMode('online-room')}}><LinkButton key='Join' title='Join' subtitle='Join an existing room' /></Link>\n          <Link to='/random' onClick={() => {setPage('random'); setMode('online-stranger')}}><LinkButton key='Random' title='Random' subtitle='Join a random room' /></Link>\n        </div>\n        <div className=\"menu__navigation--container\">\n          <BackButton action={() => setMenu('player')}/>\n        </div>\n      </div>\n    )\n  case 'mode':\n    return (\n      <div>\n        <div className=\"menu__router--container\">\n          <Link to=\"/game\" onClick={() => {setPage('game'); setMode('icebreakers')}}> <LinkButton key=\"Icebreakers\" title=\"Icebreakers\" subtitle=\"Get to know anyone!\"/> </Link>\n          <Link to=\"/game\" onClick={() => {setPage('game'); setMode('deep')}}> <LinkButton key=\"Deep\" title=\"Deep Questions\" subtitle=\"Go deep!\"/> </Link>\n          <Link to=\"/game\" onClick={() => {setPage('game'); setMode('this-or-that')}}> <LinkButton key=\"ThisOrThat\" title=\"This or That\" subtitle=\"Which will you choose?\"/> </Link>\n        </div>\n        <div className=\"menu__navigation--container\">\n          <BackButton action={() => setMenu('player')}/>\n        </div>\n      </div>\n\n    );\n  case 'player':\n    return (\n      <div>\n        <div className=\"menu__router--container\">\n          <Link to=\"/solo\" onClick={() => {setPage('solo'); setMode('solo')}}> <LinkButton key=\"Solo\" title=\"Solo\" subtitle=\"Self journey\"/> </Link>\n          <Link to=\"/\" onClick={() => setMenu('mode')}> <LinkButton key=\"Group\" title=\"Group\" subtitle=\"Group fun!\"/> </Link>\n          <Link to=\"/\" onClick={() => setMenu('online')}> <LinkButton key=\"Online\" title=\"Online\" subtitle=\"Play with friends or strangers!\"/> </Link>\n        </div>\n        <div className=\"menu__navigation--container\">\n          <BackButton action={() => setMenu('home')}/>\n        </div>\n      </div>\n    );\n  default:\n    return (\n      <div className=\"menu__router--container\">\n        <Link to=\"/\" onClick={() => setMenu('player')}> <LinkButton key=\"Play\" title=\"Play\" subtitle=\"Spark meaningful conversations\"/> </Link>\n        <Link to=\"/profile\" onClick={() => {setPage('profile'); setMode('profile')}}> <LinkButton key=\"Profile\" title=\"Profile\" subtitle=\"Your profile\"/> </Link>\n        <Link to=\"/about\" onClick={() => setPage('about')}> <LinkButton key =\"About\" title=\"About\"/> </Link>\n      </div>\n    );\n  }\n};\n\nexport default MenuRouter;","import React, { useState, useEffect }  from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport socket from '../socket'\nimport MenuHeader from '../components/navigation/MenuHeader'\nimport BackButton from '../components/navigation/BackButton'\nimport ChatInput from '../components/chat/ChatInput'\n\nconst JoinPage = () => {\n  const [inputCode, setInputCode] = useState('')\n  const history = useHistory()\n  \n  useEffect(() => {\n    socket.connect()\n  }, [])\n\n  const handleEnterClick = (event) => {\n    event.preventDefault()\n    socket.emit('joining', inputCode, ({ error }) => {\n      if (error) {\n        alert(error)\n      } else {\n        history.push(`/online/${inputCode}`)\n      }\n    })\n  }\n\n  return (\n    <div className=\"online__container\">\n      <MenuHeader />\n      <div className=\"join__container\">\n        <h1>Join Room</h1>\n        <ChatInput\n          text={inputCode}\n          setText={setInputCode}\n          sendMessage={handleEnterClick}\n          prompt='Enter room code'/>\n      </div>\n      <BackButton />\n    </div>\n  )\n}\n\nexport default JoinPage","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport socket from '../socket'\nimport { toastful, Toastful } from 'react-toastful'\nimport BackButton from '../components/navigation/BackButton'\nimport MenuHeader from '../components/navigation/MenuHeader'\n\nconst BASE_URL = 'https://sparkorbital.herokuapp.com'\n\nconst CreatePage = () => {\n  const [code, setCode] = useState('loading...')\n  const history = useHistory()\n\n  useEffect(() => {\n    socket.connect()\n\n    socket.emit('create')\n\n    socket.once('create', roomCode => {\n      setCode(roomCode)\n    })\n\n    socket.once('joining', (roomCode) => {\n      socket.isHost = true\n      history.push(`/online/${roomCode}`)\n    })\n  }, [])\n\n  const copyCode = () => {\n    navigator.clipboard.writeText(`${BASE_URL}/online/${code}`).then(() => {\n      toastful('Copied URL!',\n        {duration: 1500, position: 'top'})\n    })\n  }\n\n  return (\n    <div className=\"online__container\">\n      <MenuHeader />\n      <h1>Create Room</h1>\n      Your room code is\n      <h1>{code}</h1>\n      Copy this URL to share with your friends:\n      <span className=\"selectable selectable-text\" onClick={copyCode}> <em>{`${BASE_URL}/online/${code}`}</em> </span>\n      <h5>The room will start once one other player joins</h5>\n      <BackButton />\n      <Toastful />\n    </div>\n  )\n}\n\nexport default CreatePage","import React, { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport socket from '../socket'\nimport BackButton from '../components/navigation/BackButton'\nimport MenuHeader from '../components/navigation/MenuHeader'\n\nconst WaitingPage = () => {\n  const history = useHistory()\n\n  window.onbeforeunload = () => {\n    socket.emit('leaveWaiting')\n  }\n\n  useEffect(() => {\n    socket.connect()\n\n    socket.emit('waiting', null, (roomCode) => {\n      if (roomCode) {\n        socket.isHost = true\n        history.push(`/online/${roomCode}`)\n      }\n    })\n\n    socket.once('joining', (roomCode) => {\n      history.push(`/online/${roomCode}`)\n    })\n\n    return () => {\n      socket.emit('leaveWaiting')\n    }\n  }, [])\n\n  const handleBackAction = () => {\n    socket.emit('leaveWaiting')\n    history.goBack()\n  }\n  \n  return (\n    <div className=\"online__container\">\n      <MenuHeader />\n      <h1>Waiting for players...</h1>\n      <h5>The room will start once one other player joins</h5>\n      <BackButton action={handleBackAction} />\n    </div>\n  )\n}\n\nexport default WaitingPage","import React from 'react';\n\nimport Util from '../../utils/utils'\n\nimport '../../styles/index.css';\n\nconst JourneyEntry = ({data}) => {\n\n  const Entry = () => {\n    return (\n      <>\n        <h1> My Journey </h1>\n        <div className=\"profile__container entry\">\n          <div>\n            <p className=\"profile__journey-entry--title\"> {data.question} </p>\n            <p className=\"profile__journey-entry--date\"> {Util.timestampToString(data.timestamp)} </p>\n\n            {data.picture ? \n              <div className=\"profile__journey-entry--pic-container\">\n                <img src={data.picture.pic.urls.small} className=\"profile__journey-entry--pic\"/>\n              </div>\n              : null }\n          </div>\n          <p className=\"profile__journey-entry--reflection\">{data.reflection} </p>\n        </div>\n      </>\n    )\n  }\n\n  return (\n    (data) ? Entry() : null\n  )\n}\n\nexport default JourneyEntry;","import React, { useEffect } from 'react';\nimport BackButton from '../components/navigation/BackButton.js';\nimport JourneyEntry from '../components/profile/JourneyEntry.js';\n\nimport {connect} from 'react-redux';\n\nimport { useParams } from 'react-router';\n\nimport '../styles/index.css';\nimport { fetchJourneyFromLocalStorage } from '../reducers/soloReducer.js';\n\nconst JourneyPage = ({dispatch, journey}) => {\n\n  let {id} = useParams();\n\n  useEffect(() => {\n    dispatch(fetchJourneyFromLocalStorage());\n  }, [dispatch])\n\n  return (\n    <div>\n      <JourneyEntry data={journey[id]}/>\n\n      <div className=\"menu__navigation--container\">\n        <BackButton />\n      </div>\n    </div>\n  );\n\n};\n\nconst mapStateToProps = (state) => ({\n  journey: state.solo.journey\n});\n\nexport default connect(mapStateToProps)(JourneyPage);","import React, {useState} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch, Route\n} from 'react-router-dom';\n\nimport SoloGame from './pages/SoloGame';\nimport GroupGame from './pages/GroupGame';\nimport Profile from './pages/Profile';\nimport About from './pages/About';\nimport OnlineGame from './pages/OnlineGame';\nimport MenuHeader from './components/navigation/MenuHeader';\nimport MenuRouter from './components/navigation/MenuRouter';\nimport JoinPage from './pages/JoinPage'\nimport CreatePage from './pages/CreatePage'\nimport WaitingPage from './pages/WaitingPage'\nimport JourneyPage from './pages/JourneyPage';\n\nconst App = () => {\n\n  const [page, setPage] = useState('home');\n  const [mode, setMode] = useState('none');\n\n  const navigate = (target) => {\n    setPage(target);\n  };\n\n  return (\n    <Router>\n      <div className=\"site__container\">\n                     \n        <Switch>\n          <Route path=\"/online/:roomCode\">\n            <div className=\"game__container\">\n              <OnlineGame mode={mode} />\n            </div>\n          </Route>\n          <Route path='/random'>\n            <div className='game__container'>\n              <WaitingPage />\n            </div>\n          </Route>\n          <Route path='/join'>\n            <div className=\"game__container\">\n              <JoinPage />\n            </div>\n          </Route>\n          <Route path=\"/create\">\n            <div className=\"game__container\">\n              <CreatePage />\n            </div>\n          </Route>\n          <Route path=\"/game\">\n            <div className=\"game__container\">\n              <GroupGame mode={mode}/>\n            </div>\n          </Route>\n          <Route path=\"/solo\">\n            <SoloGame />\n          </Route>\n          <Route path=\"/about\">\n            <div className=\"menu__content--container\">\n              <div className=\"menu__content--data\">\n                <MenuHeader />\n                <About />\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/profile/:id\">\n            <div className=\"menu__content--container\">\n              <div className=\"menu__content--data\">\n                <JourneyPage/>\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/profile\">\n            <div className=\"menu__content--container\">\n              <div className=\"menu__content--data\">\n                <Profile mode={mode} setPage={navigate} setMode={setMode}/>\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/\">\n            <div className=\"menu__content--container\">\n              <div className=\"menu__content--data\">\n                <MenuHeader />\n                <MenuRouter setPage={navigate} setMode={setMode}/>\n              </div>\n            </div>\n          </Route>\n        </Switch>\n\n\n      </div>\n      \n    </Router>\n  );\n};\n\nexport default App;","import picturesService from '../services/pictures';\n\nexport const GET_PICTURE = 'GET_PICTURE';\nexport const GET_PICTURE_SUCCESS = 'GET_PICTURE_SUCCESS';\nexport const GET_PICTURE_FAILURE = 'GET_PICTURE_FAILURE';\n\nexport const getPicture = () => ({\n  type: GET_PICTURE,\n});\n\nexport const getPictureSuccess = (pictures) => ({\n  type: GET_PICTURE_SUCCESS,\n  payload: pictures,\n});\n\nexport const getPictureFailure = () => ({\n  type: GET_PICTURE_FAILURE,\n});\n\nexport function fetchPicture() {\n  return async (dispatch) => {\n    dispatch(getPicture());\n\n    try {\n      const res = await picturesService.getPictureFromUnsplash();\n\n      const data = res;\n\n      dispatch(getPictureSuccess(data));\n    } catch (error) {\n      dispatch(getPictureFailure());\n    }\n  };\n}\n\nexport function pictureByTopic(topic) {\n  return async (dispatch) => {\n    dispatch(getPicture());\n\n    try {\n      const res = await picturesService.pictureByTopic(topic);\n\n      const data = res;\n\n      dispatch(getPictureSuccess(data));\n    } catch (error) {\n      dispatch(getPictureFailure());\n    }\n  };\n}","import * as actions from '../actions/picturesActions';\n\nexport const initialState = {\n  pictures: {},\n  loading: false,\n  hasErrors: false,\n};\n\nexport default function picturesReducer(state = initialState, action) {\n  switch (action.type) {\n\n  case actions.GET_PICTURE:\n    return { ...state, loading: true };\n  case actions.GET_PICTURE_SUCCESS:\n    return {pictures: action.payload, loading: false, hasErrors: false };\n  case actions.GET_PICTURE_FAILURE:\n    return {...state, loading: false, hasErrors: true };\n  default:\n    return state;\n\n  }\n}","import * as actions from '../actions/questionsActions';\n\nexport const initialState = {\n  questions: [],\n  loading: false,\n  hasErrors: false,\n};\n\nexport default function questionsReducer(state = initialState, action) {\n  switch (action.type) {\n\n  case actions.GET_QUESTION:\n    return { ...state, loading: true };\n  case actions.GET_QUESTION_SUCCESS:\n    return {questions: action.payload, loading: false, hasErrors: false };\n  case actions.GET_QUESTION_FAILURE:\n    return {...state, loading: false, hasErrors: true };\n  default:\n    return state;\n\n  }\n}","import {combineReducers} from 'redux';\n\nimport picturesReducer from './picturesReducer';\nimport questionsReducer from './questionsReducer';\nimport soloReducer from './soloReducer';\n\nconst rootReducer = combineReducers({\n  pictures: picturesReducer,\n  questions: questionsReducer,\n  solo: soloReducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport {render} from 'react-dom';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport './styles/index.css';\n\nimport App from './App';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}